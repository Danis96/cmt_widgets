{
  "widgets": [
    {
      "name": "AW_AppBarIconTitleIcon",
      "description": "The AW_AppBarIconTitleIcon is a highly customizable AppBar widget that allows for a variety of modifications including the title, leading icon, action widget, and more. It provides flexibility in design with options for centering the title, changing the background color, adding a bottom widget, and even replacing the title or leading icon with custom widgets.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "Title text to display in the app bar."
        },
        {
          "name": "implyLeading",
          "type": "bool",
          "description": "Whether to automatically show a leading icon (e.g., back arrow)."
        },
        {
          "name": "implyAction",
          "type": "bool",
          "description": "Whether to automatically show an action icon (e.g., settings)."
        },
        {
          "name": "centerTitle",
          "type": "bool",
          "description": "Whether to center the title text."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "Background color of the app bar."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "Color of the title text."
        },
        {
          "name": "onActionPressed",
          "type": "Function",
          "description": "Callback function to be executed when the action icon is pressed."
        },
        {
          "name": "onLeadingPressed",
          "type": "Function",
          "description": "Callback function to be executed when the leading icon is pressed."
        },
        {
          "name": "leadingIcon",
          "type": "IconData",
          "description": "Optional leading icon data (e.g., for back arrow)."
        },
        {
          "name": "actionWidget",
          "type": "Widget",
          "description": "Optional custom widget to use as the action icon."
        },
        {
          "name": "actionKey",
          "type": "Key",
          "description": "Optional key for the action widget."
        },
        {
          "name": "leadingIconColor",
          "type": "Color",
          "description": "Color of the leading icon."
        },
        {
          "name": "arrowLeftMargin",
          "type": "double",
          "description": "Left margin for the leading icon."
        },
        {
          "name": "leadingWidth",
          "type": "double",
          "description": "Optional width of the leading icon."
        },
        {
          "name": "bottomWidget",
          "type": "PreferredSizeWidget",
          "description": "Optional widget to display below the app bar content."
        },
        {
          "name": "shape",
          "type": "ShapeBorder",
          "description": "Optional shape border for the app bar."
        },
        {
          "name": "titleWidget",
          "type": "Widget",
          "description": "Optional widget to replace the title text."
        },
        {
          "name": "leadingWidget",
          "type": "Widget",
          "description": "Optional widget to replace the leading icon."
        },
        {
          "name": "useTheme",
          "type": "bool",
          "description": "Whether to use the current theme for styling."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "Elevation shadow of the app bar."
        },
        {
          "name": "shadowColor",
          "type": "Color",
          "description": "Color of the elevation shadow."
        }
      ]
    },
    {
      "name": "AW_AppBarIconLogoImage",
      "description": "The AW_AppBarIconLogoImage is a customizable AppBar widget that includes a leading icon, a logo, and a profile image. It provides options for user interaction through various onTap functions, and allows for a high degree of visual customization with options for background color, leading icon color, and the ability to add additional action widgets.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context."
        },
        {
          "name": "logo",
          "type": "String",
          "description": "The logo of the app bar."
        },
        {
          "name": "profileImage",
          "type": "String",
          "description": "The profile image to display."
        },
        {
          "name": "leadingIcon",
          "type": "IconData",
          "description": "The icon to display on the leading."
        },
        {
          "name": "onLeadingPressed",
          "type": "Function",
          "description": "The function to call when the leading icon is pressed."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the app bar."
        },
        {
          "name": "leadingColor",
          "type": "Color",
          "description": "The color of the leading icon."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The widget key."
        },
        {
          "name": "leadingKey",
          "type": "Key",
          "description": "The key for the leading icon."
        },
        {
          "name": "profileImageKey",
          "type": "Key",
          "description": "The key for the profile image."
        },
        {
          "name": "userInitials",
          "type": "String",
          "description": "The initials of the user."
        },
        {
          "name": "onProfileImgTap",
          "type": "Function",
          "description": "The function to call when the profile image is tapped."
        },
        {
          "name": "actionWidget",
          "type": "List<Widget>",
          "description": "The list of action widgets."
        },
        {
          "name": "onActionTap",
          "type": "Function",
          "description": "The function to call when an action widget is tapped."
        },
        {
          "name": "onBatteryTap",
          "type": "Function",
          "description": "The function to call when the battery icon is tapped."
        },
        {
          "name": "isOnlyProfileImg",
          "type": "bool",
          "description": "Whether to only show the profile image."
        }
      ]
    },
    {
      "name": "AW_VerticalWidgetsAppBar",
      "description": "This is a AW_VerticalWidgetsAppBar with a vertical widgets app bar. It has several parameters that can be customized.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context."
        },
        {
          "name": "key",
          "type": "Key",
          "description": "The widget key."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the app bar."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "onLeadingPressed",
          "type": "Function",
          "description": "The function to call when the leading icon is pressed."
        },
        {
          "name": "actions",
          "type": "List<Widget>",
          "description": "The list of action widgets."
        },
        {
          "name": "leadingIcon",
          "type": "IconData",
          "description": "The icon to display on the leading."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the app bar."
        },
        {
          "name": "bottomWidget",
          "type": "PreferredSizeWidget",
          "description": "The widget to display at the bottom of the app bar."
        },
        {
          "name": "centerTitle",
          "type": "bool",
          "description": "Whether to center the title."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "The elevation of the app bar."
        }
      ]
    },
    {
      "name": "AW_IconImageTextIconAlignLeftAppBar",
      "description": "The AW_IconImageTextIconAlignLeftAppBar is a customizable AppBar widget that features a leading icon, title text, and a right icon, with an optional circular image between the leading icon and the title. It provides a high degree of customization, including control over the background color, title text style, elevation, and the ability to specify custom functions for the leading icon and right iconâ€™s onPressed events.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context."
        },
        {
          "name": "key",
          "type": "Key",
          "description": "The widget key."
        },
        {
          "name": "onBack",
          "type": "Function",
          "description": "The function to call when the back button is pressed."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the app bar."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the app bar."
        },
        {
          "name": "onDelete",
          "type": "Function",
          "description": "The function to call when the delete button is pressed."
        },
        {
          "name": "shouldShowImage",
          "type": "bool",
          "description": "Whether to show the image."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to display."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The text style of the title."
        },
        {
          "name": "rightIcon",
          "type": "Icon",
          "description": "The icon to display on the right."
        },
        {
          "name": "leadingIcon",
          "type": "Icon",
          "description": "The icon to display on the leading."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "The elevation of the app bar."
        },
        {
          "name": "useCached",
          "type": "bool",
          "description": "Whether to use cached network image."
        }
      ]
    },
    {
      "name": "AW_AlertCard",
      "description": "A custom StatelessWidget that displays an alert card with an icon, title, and status. The card has a customizable color and can optionally display the title text.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "icon",
          "type": "String",
          "description": "The asset name of the icon to display."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title text to display."
        },
        {
          "name": "status",
          "type": "String",
          "description": "The status text to display."
        },
        {
          "name": "statusColor",
          "type": "Color",
          "description": "The color of the status text. Defaults to a shade of blue."
        },
        {
          "name": "statusColorContainer",
          "type": "Color",
          "description": "The color of the status text container. Defaults to a lighter shade of blue."
        },
        {
          "name": "shouldSHowTitleText",
          "type": "bool",
          "description": "A flag that determines whether the title text should be displayed. Defaults to false."
        }
      ]
    },
    {
      "name": "AW_CustomBadge",
      "description": "A custom StatelessWidget that displays a badge with an image and a footer text. The badge has a customizable color, size, and appearance, and it can show an animation.",
      "parameters": [
        {
          "name": "animation",
          "type": "bool",
          "description": "A flag that determines whether the badge should show an animation."
        },
        {
          "name": "hasTitle",
          "type": "bool",
          "description": "A flag that determines whether the badge should display the title text."
        },
        {
          "name": "isUnlocked",
          "type": "bool",
          "description": "A flag that determines whether the badge is unlocked."
        },
        {
          "name": "backgroundWidth",
          "type": "double",
          "description": "The width of the badge's background."
        },
        {
          "name": "lineWidth",
          "type": "double",
          "description": "The width of the badge's line."
        },
        {
          "name": "percent",
          "type": "double",
          "description": "The percentage of the badge's progress."
        },
        {
          "name": "radiusImage",
          "type": "double",
          "description": "The radius of the badge's image."
        },
        {
          "name": "circularRadius",
          "type": "double",
          "description": "The radius of the badge's circular shape."
        },
        {
          "name": "fontSize",
          "type": "double",
          "description": "The font size of the badge's text."
        },
        {
          "name": "progressColor",
          "type": "Color",
          "description": "The color of the badge's progress indicator."
        },
        {
          "name": "footerText",
          "type": "String",
          "description": "The footer text to display on the badge."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to display on the badge."
        },
        {
          "name": "lockedImage",
          "type": "String",
          "description": "The URL of the image to display when the badge is locked."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "maxLines",
          "type": "int",
          "description": "The maximum number of lines for the badge's text."
        },
        {
          "name": "footerStyle",
          "type": "TextStyle",
          "description": "The text style of the badge's footer."
        },
        {
          "name": "innerPadding",
          "type": "EdgeInsets",
          "description": "The inner padding of the badge."
        },
        {
          "name": "titleSpacing",
          "type": "double",
          "description": "The spacing between the title and the badge."
        },
        {
          "name": "width",
          "type": "double",
          "description": "The width of the badge."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the badge."
        },
        {
          "name": "sameRadiusOfImageAndProgress",
          "type": "bool",
          "description": "A flag that determines whether the radius of the image and the progress indicator should be the same."
        }
      ]
    },
    {
      "name": "AW_BadgeBackground",
      "description": "The AW_BadgeBackground is a custom StatelessWidget that displays a badge with an image and a footer text. The badge has a customizable color, size, and appearance, and it can show an animation.The badgeâ€™s appearance, including its colors, line width, and radius, are all customizable. The badge can also show an animation, which is controlled by the animation property.This widget is highly customizable and can be adapted to fit a variety of use cases.",
      "parameters": [
        {
          "name": "animation",
          "type": "bool",
          "description": "A flag that determines whether the badge should show an animation."
        },
        {
          "name": "hasTitle",
          "type": "bool",
          "description": "A flag that determines whether the badge should display the title text."
        },
        {
          "name": "isUnlocked",
          "type": "bool",
          "description": "A flag that determines whether the badge is unlocked."
        },
        {
          "name": "lineWidth",
          "type": "double",
          "description": "The width of the badge's line."
        },
        {
          "name": "percent",
          "type": "double",
          "description": "The percentage of the badge's progress."
        },
        {
          "name": "radiusImage",
          "type": "double",
          "description": "The radius of the badge's image."
        },
        {
          "name": "fontSize",
          "type": "double",
          "description": "The font size of the badge's text."
        },
        {
          "name": "progressColor",
          "type": "Color",
          "description": "The color of the badge's progress indicator."
        },
        {
          "name": "footerText",
          "type": "String",
          "description": "The footer text to display on the badge."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to display on the badge."
        },
        {
          "name": "lockedImage",
          "type": "String",
          "description": "The URL of the image to display when the badge is locked."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "maxLines",
          "type": "int",
          "description": "The maximum number of lines for the badge's text."
        },
        {
          "name": "footerStyle",
          "type": "TextStyle",
          "description": "The text style of the badge's footer."
        },
        {
          "name": "innerPadding",
          "type": "EdgeInsets",
          "description": "The inner padding of the badge."
        },
        {
          "name": "titleSpacing",
          "type": "double",
          "description": "The spacing between the title and the badge."
        },
        {
          "name": "width",
          "type": "double",
          "description": "The width of the badge."
        },
        {
          "name": "lockedBackgroundColor",
          "type": "Color",
          "description": "The background color of the badge when it is locked."
        },
        {
          "name": "unlockedBackgroundColor",
          "type": "Color",
          "description": "The background color of the badge when it is unlocked."
        },
        {
          "name": "spaceAround",
          "type": "bool",
          "description": "A flag that determines whether the badge should have space around it."
        },
        {
          "name": "badgeOnly",
          "type": "bool",
          "description": "A flag that determines whether only the badge should be displayed."
        }
      ]
    },
    {
      "name": "AW_IconTextBanner",
      "description": "A custom StatelessWidget that displays a banner with an icon and a title. The banner has a customizable color, text style, and appearance. It can also handle tap events.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title text to display on the banner."
        },
        {
          "name": "icon",
          "type": "IconData",
          "description": "The icon to display on the banner."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the banner."
        },
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the banner's text."
        },
        {
          "name": "iconColor",
          "type": "Color",
          "description": "The color of the banner's icon."
        },
        {
          "name": "textStyle",
          "type": "TextStyle",
          "description": "The text style of the banner's text."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "A callback that is called when the banner is tapped."
        }
      ]
    },
    {
      "name": "AW_BluetoothState",
      "description": "A stateless widget that displays the Bluetooth state. It shows an image and a colored dot based on the Bluetooth state. The widget is clickable and can trigger a function on tap.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "bluetoothImage",
          "type": "String?",
          "description": "The path to the Bluetooth image asset."
        },
        {
          "name": "bluetoothState",
          "type": "BluetoothState",
          "description": "The current state of the Bluetooth connection. It can be one of the following: notPaired, pairedAndInRange, pairedAndNotInRange, bluetoothDisabled."
        },
        {
          "name": "onTap",
          "type": "Function?",
          "description": "A function that is triggered when the widget is tapped."
        }
      ]
    },
    {
      "name": "AW_BoostWidget",
      "description": "A stateless widget that displays a boost status and details. It shows a title, description, icon, and more icon. The widget is clickable and can trigger a function on tap. It also has styles and colors that can be customized.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the boost."
        },
        {
          "name": "description",
          "type": "String",
          "description": "The description of the boost."
        },
        {
          "name": "icon",
          "type": "String",
          "description": "The icon of the boost."
        },
        {
          "name": "moreIcon",
          "type": "IconData",
          "description": "The more icon of the boost."
        },
        {
          "name": "isActive",
          "type": "bool",
          "description": "The active status of the boost."
        },
        {
          "name": "label",
          "type": "String",
          "description": "The label of the boost."
        },
        {
          "name": "dayLabel",
          "type": "String",
          "description": "The day label of the boost."
        },
        {
          "name": "detailsIcon",
          "type": "String",
          "description": "The details icon of the boost."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The function to be called when the boost is tapped."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the boost."
        },
        {
          "name": "activeColor",
          "type": "Color",
          "description": "The active color of the boost."
        },
        {
          "name": "stoppedColor",
          "type": "Color",
          "description": "The stopped color of the boost."
        },
        {
          "name": "titleStyle",
          "type": "TextStyle",
          "description": "The style of the title text."
        },
        {
          "name": "descriptionStyle",
          "type": "TextStyle",
          "description": "The style of the description text."
        },
        {
          "name": "labelStyle",
          "type": "TextStyle",
          "description": "The style of the label text."
        }
      ]
    },
    {
      "name": "AW_BottomNavigationPage",
      "description": "A stateful widget that displays a bottom navigation bar. It allows customization of selected and unselected item colors, items, visibility of title, background color, type of navigation bar, initial selection, visibility of unselected label, inner padding, elevation, visibility of bar, and event trackers. It also accepts a function to handle the 'pop' event.",
      "parameters": [
        {
          "name": "selectedItemColor",
          "type": "Color?",
          "description": "The color of the selected item in the bottom navigation bar."
        },
        {
          "name": "unSelectedItemColor",
          "type": "Color",
          "description": "The color of the unselected item in the bottom navigation bar."
        },
        {
          "name": "items",
          "type": "List<BottomNavigationBarItem>?",
          "description": "The items to be displayed in the bottom navigation bar."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "showTitle",
          "type": "bool",
          "description": "A flag indicating whether to show the title."
        },
        {
          "name": "logEvent",
          "type": "Function?",
          "description": "A function to handle the log event."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the bottom navigation bar."
        },
        {
          "name": "bottomNavigationBarType",
          "type": "BottomNavigationBarType",
          "description": "The type of the bottom navigation bar."
        },
        {
          "name": "showTitleFromSide",
          "type": "bool",
          "description": "A flag indicating whether to show the title from the side."
        },
        {
          "name": "initialSelection",
          "type": "int",
          "description": "The initial selection of the bottom navigation bar."
        },
        {
          "name": "showUnselectedLabel",
          "type": "bool",
          "description": "A flag indicating whether to show the unselected label."
        },
        {
          "name": "innerPadding",
          "type": "double",
          "description": "The inner padding of the bottom navigation bar."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "The elevation of the bottom navigation bar."
        },
        {
          "name": "onPop",
          "type": "Function?",
          "description": "A function to handle the 'pop' event."
        },
        {
          "name": "barVisible",
          "type": "bool",
          "description": "A flag indicating whether the bar is visible."
        },
        {
          "name": "eventTrackers",
          "type": "List<EventTracker>?",
          "description": "The event trackers of the bottom navigation bar."
        }
      ]
    },
    {
      "name": "AW_Button",
      "description": "A stateless widget that displays a button with customizable styles, colors, and behaviors. The button can be disabled, and its appearance can be customized using a ButtonStyle. The button also has a title, which can be styled using a TextStyle. The button can have a gradient background, which can be forced to override the default style. The button also has a width, a minimum width, and padding.",
      "parameters": [
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button."
        },
        {
          "name": "disabled",
          "type": "bool",
          "description": "A flag indicating whether the button is disabled."
        },
        {
          "name": "onPressed",
          "type": "Function?",
          "description": "The function to be called when the button is pressed."
        },
        {
          "name": "style",
          "type": "ButtonStyle?",
          "description": "The style of the button."
        },
        {
          "name": "btnTitleStyle",
          "type": "TextStyle?",
          "description": "The style of the button's title."
        },
        {
          "name": "padding",
          "type": "double",
          "description": "The padding of the button."
        },
        {
          "name": "forceStyleOverGradient",
          "type": "bool",
          "description": "A flag indicating whether to force the style over the gradient."
        },
        {
          "name": "width",
          "type": "double?",
          "description": "The width of the button."
        },
        {
          "name": "minWidth",
          "type": "double?",
          "description": "The minimum width of the button."
        }
      ]
    },
    {
      "name": "AW_ButtonWithImageBg",
      "description": "A stateless widget that displays a button with an image background. The button can be disabled, and its appearance can be customized using a TextStyle and a Color. The button also has a title, which can be styled using a TextStyle. The button also has a height, a button color, and two DecorationImage parameters for the enabled and disabled states.",
      "parameters": [
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button."
        },
        {
          "name": "disabled",
          "type": "bool",
          "description": "A flag indicating whether the button is disabled."
        },
        {
          "name": "onPressed",
          "type": "Function?",
          "description": "The function to be called when the button is pressed."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the button."
        },
        {
          "name": "buttonTextStyle",
          "type": "TextStyle",
          "description": "The style of the button's title."
        },
        {
          "name": "buttonColor",
          "type": "Color",
          "description": "The color of the button."
        },
        {
          "name": "boxDecorationImage",
          "type": "DecorationImage?",
          "description": "The decoration image that contains the SVG asset path and size for the enabled state."
        },
        {
          "name": "disabledBoxDecorationImage",
          "type": "DecorationImage?",
          "description": "The decoration image that contains the SVG asset path and size for the disabled state."
        }
      ]
    },
    {
      "name": "AW_CustomCardItem",
      "description": "A stateless widget that displays a custom card item with an image and a title. The card has customizable width, image, title, maximum lines for the title, image border radius, image height, bottom radius, and box fit.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "title",
          "type": "String?",
          "description": "The title of the card."
        },
        {
          "name": "image",
          "type": "String?",
          "description": "The image of the card."
        },
        {
          "name": "width",
          "type": "double",
          "description": "The width of the card."
        },
        {
          "name": "imageBorderRadius",
          "type": "BorderRadius?",
          "description": "The border radius of the image."
        },
        {
          "name": "maxLines",
          "type": "int",
          "description": "The maximum number of lines for the title."
        },
        {
          "name": "imageHeight",
          "type": "double",
          "description": "The height of the image."
        },
        {
          "name": "bottomRadius",
          "type": "BorderRadius?",
          "description": "The bottom radius of the card."
        },
        {
          "name": "boxFit",
          "type": "BoxFit",
          "description": "How to inscribe the image into the box."
        }
      ]
    },
    {
      "name": "AW_ChallengeItemCardDemo",
      "description": "A stateless widget that displays a challenge item card with an image, texts, and various flags. The card has customizable height, image radius, and several required parameters such as image, newChallengeText, challengeTitle, joinChallengeText, isJoinable, isExpired, teamNames, teamValues, hasTeam, team, withoutTeamBannerText, challengeExpired, assetPath, teamLabel, and isNewChallenge.",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "description": "The image of the challenge item card."
        },
        {
          "name": "newChallengeText",
          "type": "String",
          "description": "The new challenge text of the challenge item card."
        },
        {
          "name": "challengeTitle",
          "type": "String",
          "description": "The title of the challenge."
        },
        {
          "name": "joinChallengeText",
          "type": "String",
          "description": "The join challenge text of the challenge item card."
        },
        {
          "name": "isJoinable",
          "type": "bool",
          "description": "A flag indicating whether the challenge is joinable."
        },
        {
          "name": "isExpired",
          "type": "bool",
          "description": "A flag indicating whether the challenge is expired."
        },
        {
          "name": "teamNames",
          "type": "String",
          "description": "The team names of the challenge."
        },
        {
          "name": "teamValues",
          "type": "String",
          "description": "The team values of the challenge."
        },
        {
          "name": "hasTeam",
          "type": "bool",
          "description": "A flag indicating whether the challenge has a team."
        },
        {
          "name": "team",
          "type": "String",
          "description": "The team of the challenge."
        },
        {
          "name": "withoutTeamBannerText",
          "type": "String",
          "description": "The without team banner text of the challenge item card."
        },
        {
          "name": "challengeExpired",
          "type": "String",
          "description": "The challenge expired text of the challenge item card."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the challenge item card."
        },
        {
          "name": "imageRadius",
          "type": "BorderRadius",
          "description": "The image radius of the challenge item card."
        },
        {
          "name": "assetPath",
          "type": "String",
          "description": "The asset path of the challenge item card."
        },
        {
          "name": "teamLabel",
          "type": "String",
          "description": "The team label of the challenge item card."
        },
        {
          "name": "isNewChallenge",
          "type": "bool",
          "description": "A flag indicating whether it is a new challenge."
        }
      ]
    },
    {
      "name": "TeamsParticipantsDays",
      "description": "A stateless widget that displays a row of items with images, titles, and subtitles. The row has customizable padding, height, alignment, colors, subtitle style, visibility flags, and main axis alignment.",
      "parameters": [
        {
          "name": "subtitle1",
          "type": "String",
          "description": "The subtitle of the first item."
        },
        {
          "name": "title1",
          "type": "String",
          "description": "The title of the first item."
        },
        {
          "name": "image1",
          "type": "String",
          "description": "The image of the first item."
        },
        {
          "name": "image2",
          "type": "String",
          "description": "The image of the second item."
        },
        {
          "name": "image3",
          "type": "String",
          "description": "The image of the third item."
        },
        {
          "name": "subtitle2",
          "type": "String",
          "description": "The subtitle of the second item."
        },
        {
          "name": "subtitle3",
          "type": "String",
          "description": "The subtitle of the third item."
        },
        {
          "name": "title2",
          "type": "String",
          "description": "The title of the second item."
        },
        {
          "name": "title3",
          "type": "String",
          "description": "The title of the third item."
        },
        {
          "name": "padding",
          "type": "EdgeInsets",
          "description": "The padding of the row."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the row."
        },
        {
          "name": "alignment",
          "type": "CrossAxisAlignment",
          "description": "The alignment of the row in the cross axis."
        },
        {
          "name": "color1",
          "type": "Color",
          "description": "The color of the first item."
        },
        {
          "name": "color2",
          "type": "Color",
          "description": "The color of the second item."
        },
        {
          "name": "color3",
          "type": "Color",
          "description": "The color of the third item."
        },
        {
          "name": "subtitleStyle",
          "type": "TextStyle?",
          "description": "The style of the subtitles."
        },
        {
          "name": "hide1",
          "type": "bool",
          "description": "A flag indicating whether to hide the first item."
        },
        {
          "name": "hide2",
          "type": "bool",
          "description": "A flag indicating whether to hide the second item."
        },
        {
          "name": "hide3",
          "type": "bool",
          "description": "A flag indicating whether to hide the third item."
        },
        {
          "name": "mainAxisAlignment",
          "type": "MainAxisAlignment",
          "description": "The alignment of the row in the main axis."
        }
      ]
    },
    {
      "name": "AW_CustomProgressIndicator",
      "description": "A custom progress indicator widget that extends StatelessWidget. It uses the SfRadialGauge widget to create a radial gauge that can be customized with various parameters.",
      "parameters": [
        {
          "name": "minValue",
          "type": "double",
          "description": "The minimum value of the radial gauge. Default is 0."
        },
        {
          "name": "maxValue",
          "type": "double",
          "description": "The maximum value of the radial gauge. Default is 5."
        },
        {
          "name": "value",
          "type": "double",
          "description": "The current value of the radial gauge. Default is 1."
        },
        {
          "name": "lineColor",
          "type": "Color",
          "description": "The color of the line in the radial gauge. Can be null."
        },
        {
          "name": "lineWidth",
          "type": "double",
          "description": "The width of the line in the radial gauge. Default is 0.05."
        },
        {
          "name": "bgColor",
          "type": "Color",
          "description": "The background color of the radial gauge. Can be null."
        },
        {
          "name": "content",
          "type": "Widget",
          "description": "The content widget inside the radial gauge. Can be null."
        },
        {
          "name": "contentPadding",
          "type": "double",
          "description": "The padding for the content widget. Default is 0."
        },
        {
          "name": "startAngle",
          "type": "double",
          "description": "The start angle of the radial gauge. Default is 125."
        },
        {
          "name": "endAngle",
          "type": "double",
          "description": "The end angle of the radial gauge. Default is 55."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the widget. Default is 150."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The key for the widget. Can be null."
        }
      ]
    },
    {
      "name": "AW_CustomIntervalProgressIndicator",
      "description": "A custom widget that displays a radial gauge with a range pointer and a content widget in the center. The gauge can be customized with various colors, angles, thicknesses, and intervals.",
      "parameters": [
        {
          "name": "minValue",
          "type": "double",
          "description": "The minimum value of the gauge. Defaults to 0."
        },
        {
          "name": "maxValue",
          "type": "double",
          "description": "The maximum value of the gauge. Defaults to 5."
        },
        {
          "name": "interval",
          "type": "double",
          "description": "The interval between the major ticks of the gauge. Defaults to 1."
        },
        {
          "name": "value",
          "type": "double",
          "description": "The current value of the range pointer. Defaults to 1."
        },
        {
          "name": "lineColor",
          "type": "Color?",
          "description": "The color of the range pointer. If null, defaults to Colors.blue."
        },
        {
          "name": "lineWidth",
          "type": "double",
          "description": "The thickness of the range pointer and the axis line. Defaults to 0.05."
        },
        {
          "name": "bgColor",
          "type": "Color?",
          "description": "The color of the axis line. If null, defaults to Colors.white."
        },
        {
          "name": "betweenColor",
          "type": "Color?",
          "description": "The color of the segments between the major ticks. If null, defaults to Colors.white."
        },
        {
          "name": "content",
          "type": "Widget?",
          "description": "The widget to display in the center of the gauge. If null, no widget is displayed."
        },
        {
          "name": "contentPadding",
          "type": "double",
          "description": "The padding between the content widget and the axis line. Defaults to 0."
        },
        {
          "name": "startAngle",
          "type": "double",
          "description": "The start angle of the gauge in degrees. Defaults to 125."
        },
        {
          "name": "endAngle",
          "type": "double",
          "description": "The end angle of the gauge in degrees. Defaults to 55."
        },
        {
          "name": "majorThickness",
          "type": "double",
          "description": "The thickness of the major ticks in pixels. Defaults to 6."
        },
        {
          "name": "separationLines",
          "type": "bool",
          "description": "Whether to show the segments between the major ticks. Defaults to true."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key to assign to the widget. If null, no key is assigned."
        },
        {
          "name": "isInversed",
          "type": "bool",
          "description": "Whether to inverse the direction of the gauge. Defaults to false."
        }
      ]
    },
    {
      "name": "AW_ConsentsListItem",
      "description": "A custom widget that displays a consent title with a toggle switch. The toggle switch can be switched between two states: accepted or declined. The widget can be customized with various colors, styles, and functions.",
      "parameters": [
        {
          "name": "onToggle",
          "type": "Function(int)",
          "description": "The function to execute when the toggle switch is toggled. The function takes an integer as an argument, which represents the index of the selected state (0 for declined, 1 for accepted)."
        },
        {
          "name": "onTitleTap",
          "type": "Function?",
          "description": "The function to execute when the consent title is tapped. If null, no function is executed."
        },
        {
          "name": "consentTitle",
          "type": "String",
          "description": "The text to display as the consent title. Defaults to an empty string."
        },
        {
          "name": "isToggleSwitched",
          "type": "bool?",
          "description": "The initial state of the toggle switch. If null, no state is selected. If true, the accepted state is selected. If false, the declined state is selected."
        },
        {
          "name": "activeBgColor",
          "type": "Color",
          "description": "The background color of the toggle switch when the accepted state is selected. Defaults to Color.fromRGBO(23, 72, 213, 1)."
        },
        {
          "name": "declinedBgColor",
          "type": "Color",
          "description": "The background color of the toggle switch when the declined state is selected. Defaults to Colors.red."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key to assign to the widget. If null, no key is assigned."
        },
        {
          "name": "style",
          "type": "TextStyle",
          "description": "The text style to apply to the consent title. Defaults to TextStyle(decoration: TextDecoration.underline)."
        },
        {
          "name": "changeOnTap",
          "type": "bool",
          "description": "Whether to change the state of the toggle switch when the consent title is tapped. Defaults to true."
        }
      ]
    },
    {
      "name": "AW_DiscountSquareWidget",
      "description": "A custom widget that displays a title and three square widgets with different discounts. The discounts can be either percentages or fixed amounts. The widget can be customized with various colors, keys, and styles. The widget can also have an empty state if the discounts are zero.",
      "parameters": [
        {
          "name": "title",
          "type": "String?",
          "description": "The text to display as the title of the widget. If null, no title is displayed."
        },
        {
          "name": "topLeftNumber",
          "type": "int?",
          "description": "The discount to display in the top left square widget. If null or zero, the square widget is empty."
        },
        {
          "name": "topRightNumber",
          "type": "int?",
          "description": "The discount to display in the top right square widget. If null or zero, the square widget is empty."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key to assign to the widget. If null, no key is assigned."
        },
        {
          "name": "price",
          "type": "String",
          "description": "The price to display in the bottom square widget. If empty, '...' is displayed. Defaults to '...'."
        },
        {
          "name": "activeBgColor",
          "type": "Color",
          "description": "The background color of the square widgets when they are active (have a non-zero discount). Defaults to Color.fromRGBO(6, 62, 89, 1)."
        },
        {
          "name": "declinedBgColor",
          "type": "Color",
          "description": "The background color of the square widgets when they are declined (have a zero discount). Defaults to Color.fromRGBO(127, 144, 159, 1)."
        },
        {
          "name": "style",
          "type": "TextStyle",
          "description": "The text style to apply to the title of the widget. Defaults to TextStyle(decoration: TextDecoration.underline)."
        }
      ]
    },
    {
      "name": "AW_DotContainerWithStates",
      "description": "A widget that displays a container with a dot. The dot can have different states, represented by the `DotType` enum. The dot can be a full dot, an empty dot, or a dot with a ring. The color of the dot and whether it is active or not can also be specified.",
      "parameters": [
        {
          "name": "type",
          "type": "DotType",
          "description": "The type of the dot. It can be `fullDot`, `emptyDot`, or `dotWithRing`."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key for the widget. It can be used to control or determine some aspect of the widget's behavior."
        },
        {
          "name": "dotColor",
          "type": "Color",
          "description": "The color of the dot. The default color is black."
        },
        {
          "name": "isNotActiveAncCurrent",
          "type": "bool",
          "description": "A flag indicating whether the dot is not active and current. The default value is `false`."
        }
      ]
    },
    {
      "name": "AW_ChallengeCardJapan",
      "description": "A widget that displays a challenge card with various properties. It can show an info icon, display text, show a button on the right corner, and more. It also has properties for action, center, and leading icons and titles, as well as values. The card can be tapped, and it can display a widget at the bottom left.",
      "parameters": [
        {
          "name": "infoIconColor",
          "type": "Color",
          "description": "The color of the info icon. The default color is a shade of blue."
        },
        {
          "name": "infoTextStyle",
          "type": "TextStyle",
          "description": "The style of the info text. The default style has a font size of 12."
        },
        {
          "name": "showRightCornerBtn",
          "type": "bool",
          "description": "Whether to show a button on the right corner. The default value is true."
        },
        {
          "name": "rightCornerBtnStyle",
          "type": "TextStyle?",
          "description": "The style of the right corner button."
        },
        {
          "name": "btnDisabled",
          "type": "bool",
          "description": "Whether the button is disabled. The default value is false."
        },
        {
          "name": "isParticipating",
          "type": "bool",
          "description": "Whether the user is participating. The default value is false."
        },
        {
          "name": "rightCornerBtnFunction",
          "type": "Function?",
          "description": "The function to be called when the right corner button is pressed."
        },
        {
          "name": "rightCornerBtnText",
          "type": "String",
          "description": "The text of the right corner button. The default text is 'Join'."
        },
        {
          "name": "infoText",
          "type": "String",
          "description": "The info text. The default text is 'Sample text'."
        },
        {
          "name": "leftBottomWidget",
          "type": "Widget?",
          "description": "The widget to be displayed at the bottom left."
        },
        {
          "name": "cardTap",
          "type": "Function?",
          "description": "The function to be called when the card is tapped."
        },
        {
          "name": "actionIcon",
          "type": "String",
          "description": "The icon for the action. The default icon is an empty string."
        },
        {
          "name": "actionTitle",
          "type": "String",
          "description": "The title for the action. The default title is 'title'."
        },
        {
          "name": "actionValue",
          "type": "int",
          "description": "The value for the action. The default value is 0."
        },
        {
          "name": "centerIcon",
          "type": "String",
          "description": "The icon for the center. The default icon is an empty string."
        },
        {
          "name": "centerTitle",
          "type": "String",
          "description": "The title for the center. The default title is 'title'."
        },
        {
          "name": "centerValue",
          "type": "int",
          "description": "The value for the center. The default value is 0."
        },
        {
          "name": "leadingIcon",
          "type": "String",
          "description": "The icon for the leading. The default icon is an empty string."
        },
        {
          "name": "leadingTitle",
          "type": "String",
          "description": "The title for the leading. The default title is 'title'."
        },
        {
          "name": "leadingValue",
          "type": "int",
          "description": "The value for the leading. The default value is 0."
        },
        {
          "name": "titleStyle",
          "type": "TextStyle",
          "description": "The style of the title. The default style has a font size of 16, a weight of 700, and a color of blue."
        },
        {
          "name": "titleBottomStyle",
          "type": "TextStyle",
          "description": "The style of the bottom title. The default style has a font size of 13, a weight of 400, and a color of black."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title. The default title is 'Sample title'."
        },
        {
          "name": "iconColor",
          "type": "Color",
          "description": "The color of the icon. The default color is a shade of blue."
        },
        {
          "name": "bottomRightTitle",
          "type": "String",
          "description": "The title at the bottom right. The default title is 'Sample title'."
        },
        {
          "name": "bottomRightTitleStyle",
          "type": "TextStyle",
          "description": "The style of the title at the bottom right. The default style has a font size of 11."
        },
        {
          "name": "bottomRightValue",
          "type": "int",
          "description": "The value at the bottom right. The default value is 0."
        },
        {
          "name": "userTeamName",
          "type": "String",
          "description": "The name of the user's team. The default name is an empty string."
        },
        {
          "name": "challengeTeamNumber",
          "type": "int",
          "description": "The number of the challenge team. The default number is 1."
        },
        {
          "name": "downLeftWidget",
          "type": "Widget",
          "description": "The widget to be displayed at the bottom left. This parameter is required."
        },
        {
          "name": "isJapan",
          "type": "bool",
          "description": "Whether the card is for Japan. The default value is false."
        }
      ]
    },
    {
      "name": "AW_ChallengeItemImage",
      "description": "A widget that displays an image for a challenge item. It includes a title, subtitle, and a join button. The image, title, subtitle, and button title can be customized. The button can also be hidden.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key for the widget. It can be used to control or determine some aspect of the widget's behavior."
        },
        {
          "name": "image",
          "type": "String",
          "description": "The URL of the image to display. The default is an empty string."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title to display. The default is an empty string."
        },
        {
          "name": "subtitle",
          "type": "String",
          "description": "The subtitle to display. The default is an empty string."
        },
        {
          "name": "showJoinButton",
          "type": "bool",
          "description": "Whether to show the join button. The default is true."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the join button. The default is an empty string."
        },
        {
          "name": "onButtonPressed",
          "type": "Function?",
          "description": "The function to be called when the join button is pressed."
        }
      ]
    },
    {
      "name": "AW_CheckboxText",
      "description": "A stateful widget that displays a checkbox with text. The checkbox can be active or inactive, and its color can be customized. The text can be plain or rich text. The widget also has an onChange function that is called when the checkbox is toggled.",
      "parameters": [
        {
          "name": "key",
          "type": "Key?",
          "description": "The key for the widget. It can be used to control or determine some aspect of the widget's behavior."
        },
        {
          "name": "text",
          "type": "String",
          "description": "The text to display next to the checkbox. This parameter is required."
        },
        {
          "name": "disabled",
          "type": "bool",
          "description": "Whether the checkbox is disabled. This parameter is required."
        },
        {
          "name": "newValue",
          "type": "bool",
          "description": "The new value of the checkbox. This parameter is required."
        },
        {
          "name": "onChange",
          "type": "Function",
          "description": "The function to be called when the checkbox is toggled. This parameter is required."
        },
        {
          "name": "checkBoxIconColor",
          "type": "Color",
          "description": "The color of the checkbox icon. The default color is blue."
        },
        {
          "name": "inActiveCheckBoxBgColor",
          "type": "Color",
          "description": "The background color of the checkbox when it is inactive. The default color is white."
        },
        {
          "name": "activeCheckBoxBgColor",
          "type": "Color?",
          "description": "The background color of the checkbox when it is active."
        },
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the text. The default color is black."
        },
        {
          "name": "shouldUseRichTest",
          "type": "bool",
          "description": "Whether to use rich text. The default value is false."
        },
        {
          "name": "otherText",
          "type": "String",
          "description": "Other text to display. The default text is an empty string."
        },
        {
          "name": "richText",
          "type": "String",
          "description": "The rich text to display. The default text is an empty string."
        }
      ]
    },
    {
      "name": "AW_Co2RankingWidget",
      "description": "A widget that displays a ranking based on CO2 emissions.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The key for the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the widget."
        },
        {
          "name": "rankTopPlace",
          "type": "List<double>",
          "description": "The ranking for the top place."
        },
        {
          "name": "rankBottomPlace",
          "type": "List<double>",
          "description": "The ranking for the bottom place."
        },
        {
          "name": "initialsTop",
          "type": "List<String>",
          "description": "The initials for the top place."
        },
        {
          "name": "initialsBottom",
          "type": "List<String>",
          "description": "The initials for the bottom place."
        },
        {
          "name": "initialsMiddle",
          "type": "String",
          "description": "The initials for the middle place."
        },
        {
          "name": "nameMiddle",
          "type": "String",
          "description": "The name for the middle place."
        },
        {
          "name": "rankMiddle",
          "type": "double",
          "description": "The ranking for the middle place."
        },
        {
          "name": "namesBottom",
          "type": "List<String>",
          "description": "The names for the bottom place."
        },
        {
          "name": "namesTop",
          "type": "List<String>",
          "description": "The names for the top place."
        },
        {
          "name": "emissionBottom",
          "type": "List<double>",
          "description": "The emissions for the bottom place."
        },
        {
          "name": "emissionTop",
          "type": "List<double>",
          "description": "The emissions for the top place."
        },
        {
          "name": "emissionMiddle",
          "type": "double",
          "description": "The emissions for the middle place."
        },
        {
          "name": "imgSeparator",
          "type": "Image",
          "description": "The image for the separator."
        },
        {
          "name": "valueDesc",
          "type": "String",
          "description": "The description of the value."
        },
        {
          "name": "isMe",
          "type": "bool",
          "description": "A flag indicating whether the widget represents the current user."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "imgSeparatorColor",
          "type": "Color",
          "description": "The color of the image separator."
        },
        {
          "name": "separatorColor",
          "type": "Color",
          "description": "The color of the separator."
        },
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the text."
        },
        {
          "name": "isMeTextColor",
          "type": "Color",
          "description": "The color of the text if the widget represents the current user."
        },
        {
          "name": "circleColor",
          "type": "Color",
          "description": "The color of the circle."
        },
        {
          "name": "circleIsMeColor",
          "type": "Color",
          "description": "The color of the circle if the widget represents the current user."
        }
      ]
    },
    {
      "name": "AW_Stepper",
      "description": "A widget that displays a stepper. It allows to navigate through a sequence of steps with each step requiring user's input. It includes features like scrolling physics, stepper type, current step, step tapped event, step continue event, step cancel event, controls builder, elevation, and colors for complete, active, and inactive states.",
      "parameters": [
        {
          "name": "key",
          "type": "Key",
          "description": "The key for the widget."
        },
        {
          "name": "steps",
          "type": "List<AW_Step>",
          "description": "The steps of the stepper."
        },
        {
          "name": "physics",
          "type": "ScrollPhysics",
          "description": "The scrolling physics for the stepper."
        },
        {
          "name": "type",
          "type": "AW_StepperType",
          "description": "The type of the stepper. It can be vertical or horizontal."
        },
        {
          "name": "currentStep",
          "type": "int",
          "description": "The current step of the stepper."
        },
        {
          "name": "onStepTapped",
          "type": "ValueChanged<int>",
          "description": "The callback function that is called when a step is tapped."
        },
        {
          "name": "onStepContinue",
          "type": "VoidCallback",
          "description": "The callback function that is called when the 'continue' button is pressed."
        },
        {
          "name": "onStepCancel",
          "type": "VoidCallback",
          "description": "The callback function that is called when the 'cancel' button is pressed."
        },
        {
          "name": "controlsBuilder",
          "type": "ControlsWidgetBuilder",
          "description": "The builder for the controls of the stepper."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "The elevation of the stepper."
        },
        {
          "name": "completeColor",
          "type": "Color",
          "description": "The color for the complete state of the stepper."
        },
        {
          "name": "activeColor",
          "type": "Color",
          "description": "The color for the active state of the stepper."
        },
        {
          "name": "inActiveColor",
          "type": "Color",
          "description": "The color for the inactive state of the stepper."
        },
        {
          "name": "index",
          "type": "int",
          "description": "The index of the stepper."
        }
      ]
    },
    {
      "name": "AW_FullPageDialog",
      "description": "A full page dialog widget. It displays a dialog with a title, content, and a button. The content can be a string or a widget. The dialog can be customized with various colors, padding, and a button style.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context for the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the dialog."
        },
        {
          "name": "content",
          "type": "String",
          "description": "The content of the dialog."
        },
        {
          "name": "buttonText",
          "type": "String",
          "description": "The text of the button in the dialog."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "contentColor",
          "type": "Color",
          "description": "The color of the content."
        },
        {
          "name": "buttonColor",
          "type": "Color",
          "description": "The color of the button."
        },
        {
          "name": "key",
          "type": "String",
          "description": "The key for the widget."
        },
        {
          "name": "contentWidget",
          "type": "Widget",
          "description": "The widget to be used as the content of the dialog."
        },
        {
          "name": "noButton",
          "type": "bool",
          "description": "A flag indicating whether the dialog should have a button."
        },
        {
          "name": "contentPadding",
          "type": "EdgeInsetsGeometry",
          "description": "The padding for the content of the dialog."
        },
        {
          "name": "titlePadding",
          "type": "EdgeInsetsGeometry",
          "description": "The padding for the title of the dialog."
        },
        {
          "name": "insetPadding",
          "type": "EdgeInsets",
          "description": "The inset padding for the dialog."
        },
        {
          "name": "buttonStyle",
          "type": "ButtonStyle",
          "description": "The style for the button in the dialog."
        },
        {
          "name": "shape",
          "type": "ShapeBorder",
          "description": "The shape of the dialog."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the dialog."
        },
        {
          "name": "onButtonPressed",
          "type": "VoidCallback",
          "description": "The callback function that is called when the button is pressed."
        }
      ]
    },
    {
      "name": "AW_InfoPopup",
      "description": "A function that displays an information popup. It includes a title, content, and one or two buttons. The title and content can be strings or widgets. The popup can be dismissed and its dismissal behavior can be customized. It also includes various colors for title, content, button, and button text. It also includes a key for the widget, and optional widgets for content and title. It also includes an optional icon for the title with its color. It also includes optional functions that are called when the buttons are pressed. It also includes flags for dismissal, two buttons, and can pop.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context for the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the popup."
        },
        {
          "name": "content",
          "type": "String",
          "description": "The content of the popup."
        },
        {
          "name": "buttonText",
          "type": "String",
          "description": "The text of the first button in the popup."
        },
        {
          "name": "buttonTwoText",
          "type": "String",
          "description": "The text of the second button in the popup."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "contentColor",
          "type": "Color",
          "description": "The color of the content."
        },
        {
          "name": "buttonColor",
          "type": "Color",
          "description": "The color of the button."
        },
        {
          "name": "buttonTextColor",
          "type": "Color",
          "description": "The color of the button text."
        },
        {
          "name": "key",
          "type": "String",
          "description": "The key for the widget."
        },
        {
          "name": "contentWidget",
          "type": "Widget",
          "description": "The widget to be used as the content of the popup."
        },
        {
          "name": "titleWidget",
          "type": "Widget",
          "description": "The widget to be used as the title of the popup."
        },
        {
          "name": "iconForTitle",
          "type": "IconData",
          "description": "The icon for the title."
        },
        {
          "name": "iconColor",
          "type": "Color",
          "description": "The color of the icon."
        },
        {
          "name": "onButtonPressed",
          "type": "Function",
          "description": "The callback function that is called when the first button is pressed."
        },
        {
          "name": "onButtonTwoPressed",
          "type": "Function",
          "description": "The callback function that is called when the second button is pressed."
        },
        {
          "name": "dismiss",
          "type": "bool",
          "description": "A flag indicating whether the popup should be dismissible."
        },
        {
          "name": "twoButtons",
          "type": "bool",
          "description": "A flag indicating whether the popup should have two buttons."
        },
        {
          "name": "canPop",
          "type": "bool",
          "description": "A flag indicating whether the popup can be popped."
        }
      ]
    },
    {
      "name": "AW_SimpleDialog",
      "description": "A simple dialog widget. It displays a dialog with a title, content, and one or two buttons. The title and content can be strings or widgets. The dialog can be dismissed and its dismissal behavior can be customized. It also includes various colors for title, content, and button. It also includes a key for the widget, and optional widgets for content and title. It also includes optional functions that are called when the buttons are pressed. It also includes flags for dismissal, two buttons, and can pop.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context for the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the dialog."
        },
        {
          "name": "content",
          "type": "String",
          "description": "The content of the dialog."
        },
        {
          "name": "buttonText",
          "type": "String",
          "description": "The text of the first button in the dialog."
        },
        {
          "name": "buttonTwoText",
          "type": "String",
          "description": "The text of the second button in the dialog."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "contentColor",
          "type": "Color",
          "description": "The color of the content."
        },
        {
          "name": "buttonColor",
          "type": "Color",
          "description": "The color of the button."
        },
        {
          "name": "key",
          "type": "String",
          "description": "The key for the widget."
        },
        {
          "name": "contentWidget",
          "type": "Widget",
          "description": "The widget to be used as the content of the dialog."
        },
        {
          "name": "titleWidget",
          "type": "Widget",
          "description": "The widget to be used as the title of the dialog."
        },
        {
          "name": "onButtonPressed",
          "type": "Function",
          "description": "The callback function that is called when the first button is pressed."
        },
        {
          "name": "onButtonTwoPressed",
          "type": "Function",
          "description": "The callback function that is called when the second button is pressed."
        },
        {
          "name": "dismiss",
          "type": "bool",
          "description": "A flag indicating whether the dialog should be dismissible."
        },
        {
          "name": "twoButtons",
          "type": "bool",
          "description": "A flag indicating whether the dialog should have two buttons."
        },
        {
          "name": "canPop",
          "type": "bool",
          "description": "A flag indicating whether the dialog can be popped."
        }
      ]
    },
    {
      "name": "AW_TwoButtonDialog",
      "description": "A two-button dialog widget. It displays a dialog with a title, content, and two buttons. The title and content are strings. The dialog can be dismissed and its dismissal behavior can be customized. It also includes various colors for title, content, and button. It also includes a key for the widget, and a function that is called when the right button is pressed.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context for the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the dialog."
        },
        {
          "name": "content",
          "type": "String",
          "description": "The content of the dialog."
        },
        {
          "name": "leftButtonText",
          "type": "String",
          "description": "The text of the left button in the dialog."
        },
        {
          "name": "rightButtonText",
          "type": "String",
          "description": "The text of the right button in the dialog."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title."
        },
        {
          "name": "contentColor",
          "type": "Color",
          "description": "The color of the content."
        },
        {
          "name": "buttonColor",
          "type": "Color",
          "description": "The color of the button."
        },
        {
          "name": "key",
          "type": "String",
          "description": "The key for the widget."
        },
        {
          "name": "onRightButtonPressed",
          "type": "Function",
          "description": "The callback function that is called when the right button is pressed."
        }
      ]
    },
    {
      "name": "AW_TypedDialog",
      "description": "A typed dialog widget. It displays a dialog with a title, content, and a button. The title and content can be strings or widgets. The dialog can be dismissed and its dismissal behavior can be customized. It also includes a key for the widget, an image for a specific profile, a button title, flags for barrier dismissible, can pop, and specific user profile dialog info. It also includes optional widgets for title, content, and bottom. It also includes an optional color for content, and a function that is called when the dialog is tapped. The type of the dialog determines the values used from the singleton instance TypedDialogConfig.",
      "parameters": [
        {
          "name": "context",
          "type": "BuildContext",
          "description": "The build context for the widget."
        },
        {
          "name": "type",
          "type": "DialogType",
          "description": "The type of the dialog. It determines the values used from the singleton instance TypedDialogConfig."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the dialog."
        },
        {
          "name": "content",
          "type": "String",
          "description": "The content of the dialog."
        },
        {
          "name": "key",
          "type": "String",
          "description": "The key for the widget."
        },
        {
          "name": "imgForSpecificProfile",
          "type": "String",
          "description": "The image for a specific profile."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button in the dialog."
        },
        {
          "name": "barrierDismissible",
          "type": "bool",
          "description": "A flag indicating whether the dialog should be barrier dismissible."
        },
        {
          "name": "canPop",
          "type": "bool",
          "description": "A flag indicating whether the dialog can be popped."
        },
        {
          "name": "specificUserProfileDialogInfo",
          "type": "bool",
          "description": "A flag indicating whether the dialog is for a specific user profile dialog info."
        },
        {
          "name": "titleWidget",
          "type": "Widget",
          "description": "The widget to be used as the title of the dialog."
        },
        {
          "name": "contentWidget",
          "type": "Widget",
          "description": "The widget to be used as the content of the dialog."
        },
        {
          "name": "bottomWidget",
          "type": "Widget",
          "description": "The widget to be used at the bottom of the dialog."
        },
        {
          "name": "contentColor",
          "type": "Color",
          "description": "The color of the content."
        },
        {
          "name": "onTap",
          "type": "Function",
          "description": "The callback function that is called when the dialog is tapped."
        }
      ]
    },
    {
      "name": "AW_CustomDrawer",
      "description": "A custom drawer widget in Flutter. It provides a highly customizable drawer interface with various properties to modify its appearance and behavior.",
      "parameters": [
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the drawer."
        },
        {
          "name": "headerHeight",
          "type": "double",
          "description": "The height of the drawer's header."
        },
        {
          "name": "headerCenterWidget",
          "type": "Widget",
          "description": "The widget to display in the center of the drawer's header."
        },
        {
          "name": "actionIcon",
          "type": "IconData",
          "description": "The icon for the action button in the drawer."
        },
        {
          "name": "actionIconColor",
          "type": "Color",
          "description": "The color of the action icon."
        },
        {
          "name": "onActionIconPress",
          "type": "Function",
          "description": "The callback function that is called when the action icon is pressed."
        },
        {
          "name": "actionLinkClicked",
          "type": "Function",
          "description": "The callback function that is called when the action link is clicked."
        },
        {
          "name": "listItems",
          "type": "List<AW_DrawerListItem>",
          "description": "The list of items to display in the drawer."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The key to associate with this widget."
        },
        {
          "name": "actionKey",
          "type": "Key",
          "description": "The key to associate with the action icon."
        },
        {
          "name": "logoutTitle",
          "type": "String",
          "description": "The title for the logout option. If this is null, the logout option will not be shown."
        },
        {
          "name": "onLogoutPress",
          "type": "Function",
          "description": "The callback function that is called when the logout option is pressed."
        },
        {
          "name": "onDrawerOpened",
          "type": "Function(String)",
          "description": "The callback function that is called when the drawer is opened."
        },
        {
          "name": "onDrawerItemPressed",
          "type": "Function(String)",
          "description": "The callback function that is called when a drawer item is pressed."
        },
        {
          "name": "labelStyle",
          "type": "TextStyle",
          "description": "The text style for the labels in the drawer."
        },
        {
          "name": "customHeader",
          "type": "Widget",
          "description": "A custom widget to use as the drawer's header."
        },
        {
          "name": "logoutStyle",
          "type": "TextStyle",
          "description": "The text style for the logout option."
        },
        {
          "name": "logoutTitleColor",
          "type": "Color",
          "description": "The color of the logout title."
        },
        {
          "name": "headerCenter",
          "type": "bool",
          "description": "Whether to center the header content."
        },
        {
          "name": "headerMainAxisAlignment",
          "type": "MainAxisAlignment",
          "description": "How the children should be placed along the main axis in the header."
        },
        {
          "name": "wrapWithMaterial",
          "type": "bool",
          "description": "Whether to wrap the drawer with a Material widget."
        },
        {
          "name": "appVersion",
          "type": "String",
          "description": "The version of the app to display in the drawer."
        },
        {
          "name": "appVersionStyle",
          "type": "TextStyle",
          "description": "The text style for the app version."
        },
        {
          "name": "listItemBottomPadding",
          "type": "double",
          "description": "The bottom padding for the list items in the drawer."
        },
        {
          "name": "elevation",
          "type": "double",
          "description": "The elevation of the drawer."
        }
      ]
    },
    {
      "name": "AW_DrawerListItem",
      "description": "The `AW_DrawerListItem` widget is a customizable list item commonly used in navigation drawers. It displays an icon or image alongside a text title. Users can tap on the item to navigate to a specific route within the app.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title text displayed for the list item."
        },
        {
          "name": "image",
          "type": "String",
          "description": "The path to an SVG image asset representing the icon or image for the list item. If empty, no image is displayed."
        },
        {
          "name": "routeName",
          "type": "String",
          "description": "The name of the route to navigate when the list item is tapped."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "An optional key to uniquely identify the widget."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title text (default: white)."
        },
        {
          "name": "imageColor",
          "type": "Color",
          "description": "The color of the image/icon (default: white)."
        },
        {
          "name": "arguments",
          "type": "dynamic",
          "description": "Additional arguments to pass when navigating to the specified route."
        },
        {
          "name": "tapKey",
          "type": "Key",
          "description": "An optional key for handling tap events."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the image/icon (default: 20)."
        },
        {
          "name": "boxFit",
          "type": "BoxFit",
          "description": "The fit mode for the image/icon (default: BoxFit.contain)."
        },
        {
          "name": "textStyle",
          "type": "TextStyle",
          "description": "Custom text style for the title."
        },
        {
          "name": "margin",
          "type": "EdgeInsets",
          "description": "The margin around the list item (default: bottom: 30, left: 15)."
        },
        {
          "name": "isLink",
          "type": "bool",
          "description": "Whether the list item represents an external link (default: false)."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "A callback function triggered when the list item is tapped."
        }
      ]
    },
    {
      "name": "AW_FAQListItem",
      "description": "The AW_FAQListItem is a StatefulWidget that displays a list item for FAQs. It has a title and description, and can be opened or closed to show or hide the description. It also has customizable styles for the title and description, as well as customizable assets for the open and close arrows.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the FAQ item."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The text style of the title. The default style is black, font size 16, and weight 400."
        },
        {
          "name": "arrowsAssetClosed",
          "type": "SvgPicture",
          "description": "The asset shown when the FAQ item is closed."
        },
        {
          "name": "arrowsAssetOpened",
          "type": "SvgPicture",
          "description": "The asset shown when the FAQ item is opened."
        },
        {
          "name": "boxShadow",
          "type": "List<BoxShadow>",
          "description": "The box shadow of the FAQ item. The default is a box shadow with color RGB(0, 0, 0, 0.05), offset (0, 8), blur radius 16, and spread radius 0."
        },
        {
          "name": "description",
          "type": "String",
          "description": "The description of the FAQ item."
        },
        {
          "name": "descriptionTextStyle",
          "type": "TextStyle",
          "description": "The text style of the description. The default style is color RGB(70, 83, 93, 1), font size 14, and weight 400."
        },
        {
          "name": "padding",
          "type": "EdgeInsets",
          "description": "The padding of the FAQ item. The default is symmetric horizontal padding of 16."
        }
      ]
    },
    {
      "name": "AW_FilterAigComponent",
      "description": "The AW_FilterAigComponent is a StatelessWidget that displays a filter component. It contains a list of ShieldFilter items, and each item can be clicked to trigger an action. The selected item is highlighted with a specified color.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The key for the widget."
        },
        {
          "name": "listItem",
          "type": "List<ShieldFilter>",
          "description": "The list of ShieldFilter items to be displayed."
        },
        {
          "name": "onItemClick",
          "type": "Function(String, int)",
          "description": "The function to be called when an item is clicked. It takes the text and id of the ShieldFilter item as parameters."
        },
        {
          "name": "selectedShieldId",
          "type": "int",
          "description": "The id of the currently selected ShieldFilter item."
        },
        {
          "name": "selectedFilterColor",
          "type": "Color",
          "description": "The color to highlight the selected ShieldFilter item."
        }
      ]
    },
    {
      "name": "AW_GeofenceItem",
      "description": "The AW_GeofenceItem is a StatelessWidget that displays a geofence item. It has a checkbox that can be tapped to trigger an action. The checkbox, border, and text have customizable colors. An optional edit button can be added.",
      "parameters": [
        {
          "name": "borderColor",
          "type": "Color",
          "description": "The color of the border. The default color is RGB(97, 97, 97, 1)."
        },
        {
          "name": "checkBoxBackgroundColor",
          "type": "Color",
          "description": "The background color of the checkbox. The default color is RGB(224, 224, 224, 1)."
        },
        {
          "name": "checkBoxPath",
          "type": "String",
          "description": "The path to the asset for the checkbox."
        },
        {
          "name": "checkBoxColor",
          "type": "Color",
          "description": "The color of the checkbox."
        },
        {
          "name": "text",
          "type": "String",
          "description": "The text displayed in the geofence item."
        },
        {
          "name": "editButton",
          "type": "Widget",
          "description": "An optional widget to be displayed as an edit button."
        },
        {
          "name": "onCheckBoxTap",
          "type": "VoidCallback",
          "description": "The function to be called when the checkbox is tapped."
        },
        {
          "name": "checkBoxTapped",
          "type": "bool",
          "description": "A boolean value indicating whether the checkbox is tapped."
        }
      ]
    },
    {
      "name": "AW_TappableGooglePlace",
      "description": "The AW_TappableGooglePlace is a StatelessWidget that displays a tappable place. It has a text field that shows the name of the place. The text field has two styles, one for when it is selected and one for when it is not. The widget also has a border with a customizable color. When the widget is tapped, it triggers a specified action.",
      "parameters": [
        {
          "name": "place",
          "type": "String",
          "description": "The name of the place to be displayed."
        },
        {
          "name": "borderColor",
          "type": "Color",
          "description": "The color of the border. The default color is grey."
        },
        {
          "name": "notSelectedStyle",
          "type": "TextStyle",
          "description": "The text style when the widget is not selected. The default style is grey color and font size 16."
        },
        {
          "name": "selectedStyle",
          "type": "TextStyle",
          "description": "The text style when the widget is selected. The default style is blue color and font size 16."
        },
        {
          "name": "isSelected",
          "type": "bool",
          "description": "A boolean value indicating whether the widget is selected."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The function to be called when the widget is tapped."
        }
      ]
    },
    {
      "name": "AW_InboxListItem",
      "description": "The AW_InboxListItem is a StatelessWidget that displays an inbox list item. It has a title, image, date/time, and text content. The styles for the title, text content, and date/time can be customized. The widget also has a tap action, and different styles can be applied depending on whether the item has been read.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the inbox list item."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to be displayed."
        },
        {
          "name": "dateTime",
          "type": "String",
          "description": "The date and time of the inbox list item."
        },
        {
          "name": "textContent",
          "type": "String",
          "description": "The text content of the inbox list item."
        },
        {
          "name": "readAt",
          "type": "double",
          "description": "The timestamp when the inbox list item was read."
        },
        {
          "name": "sentAt",
          "type": "double",
          "description": "The timestamp when the inbox list item was sent."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The text style of the title."
        },
        {
          "name": "textContentTextStyle",
          "type": "TextStyle",
          "description": "The text style of the text content."
        },
        {
          "name": "dateTimeTextStyle",
          "type": "TextStyle",
          "description": "The text style of the date/time."
        },
        {
          "name": "titleUnreadFontWeight",
          "type": "FontWeight",
          "description": "The font weight of the title when the inbox list item is unread."
        },
        {
          "name": "titleReadFontWeight",
          "type": "FontWeight",
          "description": "The font weight of the title when the inbox list item is read."
        },
        {
          "name": "textReadFontWeight",
          "type": "FontWeight",
          "description": "The font weight of the text content when the inbox list item is read."
        },
        {
          "name": "textUnreadFontWeight",
          "type": "FontWeight",
          "description": "The font weight of the text content when the inbox list item is unread."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The function to be called when the inbox list item is tapped."
        },
        {
          "name": "crossAxisAlignment",
          "type": "CrossAxisAlignment",
          "description": "The alignment of the children along the cross axis."
        },
        {
          "name": "useCached",
          "type": "bool",
          "description": "A boolean value indicating whether to use cached images."
        },
        {
          "name": "imgFit",
          "type": "BoxFit",
          "description": "How the image should be inscribed into the box."
        },
        {
          "name": "imgNotCachedHeight",
          "type": "int",
          "description": "The height of the image when it is not cached."
        },
        {
          "name": "titleReadColor",
          "type": "Color",
          "description": "The color of the title when the inbox list item is read."
        },
        {
          "name": "titleUnReadColor",
          "type": "Color",
          "description": "The color of the title when the inbox list item is unread."
        },
        {
          "name": "dateReadColor",
          "type": "Color",
          "description": "The color of the date/time when the inbox list item is read."
        },
        {
          "name": "dateUnReadColor",
          "type": "Color",
          "description": "The color of the date/time when the inbox list item is unread."
        }
      ]
    },
    {
      "name": "AW_InboxReplyItem",
      "description": "AW_InboxReplyItem is a StatelessWidget that represents an inbox reply item. It has various properties that can be customized such as sentAt, iconUrl, imageUrl, dateTime, textContent, actionButtonLabel, actionParameter, actionType, htmlContent, htmlContentColor, linkAction, dateTimeTextStyle, tappableTextStyle, tappableLinkTextStyle, textContentTextStyle, and useCached.",
      "parameters": [
        {
          "name": "sentAt",
          "type": "double",
          "description": "The time at which the reply was sent."
        },
        {
          "name": "iconUrl",
          "type": "String",
          "description": "The URL of the icon to be displayed."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to be displayed."
        },
        {
          "name": "dateTime",
          "type": "String",
          "description": "The date and time of the reply."
        },
        {
          "name": "textContent",
          "type": "String",
          "description": "The content of the text in the reply."
        },
        {
          "name": "actionButtonLabel",
          "type": "String",
          "description": "The label of the action button."
        },
        {
          "name": "actionParameter",
          "type": "String",
          "description": "The parameter for the action."
        },
        {
          "name": "actionType",
          "type": "String",
          "description": "The type of the action."
        },
        {
          "name": "htmlContent",
          "type": "String",
          "description": "The HTML content of the reply."
        },
        {
          "name": "htmlContentColor",
          "type": "Color",
          "description": "The color of the HTML content."
        },
        {
          "name": "linkAction",
          "type": "Function",
          "description": "The action to be performed when the link is clicked."
        },
        {
          "name": "dateTimeTextStyle",
          "type": "TextStyle",
          "description": "The style of the date and time text."
        },
        {
          "name": "tappableTextStyle",
          "type": "TextStyle",
          "description": "The style of the tappable text."
        },
        {
          "name": "tappableLinkTextStyle",
          "type": "TextStyle",
          "description": "The style of the tappable link text."
        },
        {
          "name": "textContentTextStyle",
          "type": "TextStyle",
          "description": "The style of the text content."
        },
        {
          "name": "useCached",
          "type": "bool",
          "description": "Whether to use cached data or not."
        }
      ]
    },
    {
      "name": "AW_InboxReplyItemNew",
      "description": "AW_InboxReplyItemNew is a StatelessWidget that represents an inbox reply item. It has various properties that can be customized such as sentAt, iconUrl, imageUrl, dateTime, textContent, actionButtonLabel, actionParameter, actionType, htmlContent, htmlContentColor, linkAction, dateTimeTextStyle, tappableTextStyle, tappableLinkTextStyle, textContentTextStyle, and padding.",
      "parameters": [
        {
          "name": "sentAt",
          "type": "double",
          "description": "The time at which the reply was sent."
        },
        {
          "name": "iconUrl",
          "type": "String",
          "description": "The URL of the icon to be displayed."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image to be displayed."
        },
        {
          "name": "dateTime",
          "type": "String",
          "description": "The date and time of the reply."
        },
        {
          "name": "textContent",
          "type": "String",
          "description": "The content of the text in the reply."
        },
        {
          "name": "actionButtonLabel",
          "type": "String",
          "description": "The label of the action button."
        },
        {
          "name": "actionParameter",
          "type": "String",
          "description": "The parameter for the action."
        },
        {
          "name": "actionType",
          "type": "String",
          "description": "The type of the action."
        },
        {
          "name": "htmlContent",
          "type": "String",
          "description": "The HTML content of the reply."
        },
        {
          "name": "htmlContentColor",
          "type": "Color",
          "description": "The color of the HTML content."
        },
        {
          "name": "linkAction",
          "type": "Function",
          "description": "The action to be performed when the link is clicked."
        },
        {
          "name": "dateTimeTextStyle",
          "type": "TextStyle",
          "description": "The style of the date and time text."
        },
        {
          "name": "tappableTextStyle",
          "type": "TextStyle",
          "description": "The style of the tappable text."
        },
        {
          "name": "tappableLinkTextStyle",
          "type": "TextStyle",
          "description": "The style of the tappable link text."
        },
        {
          "name": "textContentTextStyle",
          "type": "TextStyle",
          "description": "The style of the text content."
        },
        {
          "name": "padding",
          "type": "EdgeInsets",
          "description": "The padding around the widget."
        }
      ]
    },
    {
      "name": "AW_ProgressBarWithPoints",
      "description": "AW_ProgressBarWithPoints is a StatefulWidget that represents a progress bar with points. It has various properties that can be customized such as widgetKey, start, progress, progressColor, backgroundColor, progressStrokeWidth, backgroundStrokeWidth, progressStrokeCap, backgroundStrokeCap, pointColor, and points.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key for the widget."
        },
        {
          "name": "start",
          "type": "double",
          "description": "The start value of the progress bar."
        },
        {
          "name": "progress",
          "type": "double",
          "description": "The progress value of the progress bar."
        },
        {
          "name": "progressColor",
          "type": "Color",
          "description": "The color of the progress bar."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the progress bar."
        },
        {
          "name": "progressStrokeWidth",
          "type": "double",
          "description": "The stroke width of the progress bar."
        },
        {
          "name": "backgroundStrokeWidth",
          "type": "double",
          "description": "The stroke width of the background."
        },
        {
          "name": "progressStrokeCap",
          "type": "StrokeCap",
          "description": "The stroke cap of the progress bar."
        },
        {
          "name": "backgroundStrokeCap",
          "type": "StrokeCap",
          "description": "The stroke cap of the background."
        },
        {
          "name": "pointColor",
          "type": "Color",
          "description": "The color of the points on the progress bar."
        },
        {
          "name": "points",
          "type": "List<double>",
          "description": "The points on the progress bar."
        }
      ]
    },
    {
      "name": "AW_LinearPercentageWithLabelsAndImage",
      "description": "AW_LinearPercentageWithLabelsAndImage is a StatelessWidget that represents a linear percentage bar with labels and an image. It has various properties that can be customized such as widgetKey, discountCondition, progressColor, points, title, progress, progressStrokeCap, and checkCondition.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key for the widget."
        },
        {
          "name": "discountCondition",
          "type": "String?",
          "description": "The condition for the discount."
        },
        {
          "name": "progress",
          "type": "double?",
          "description": "The progress value of the progress bar."
        },
        {
          "name": "points",
          "type": "List<double>?",
          "description": "The points on the progress bar."
        },
        {
          "name": "progressColor",
          "type": "Color",
          "description": "The color of the progress bar."
        },
        {
          "name": "title",
          "type": "String?",
          "description": "The title of the widget."
        },
        {
          "name": "progressStrokeCap",
          "type": "StrokeCap",
          "description": "The stroke cap of the progress bar."
        },
        {
          "name": "checkCondition",
          "type": "bool",
          "description": "A flag indicating whether to check the condition or not."
        }
      ]
    },
    {
      "name": "AW_DemoNewsItem",
      "description": "This is a StatelessWidget that displays a news item. It has several customizable parameters for flexibility.",
      "parameters": [
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The function to be executed when the widget is tapped."
        },
        {
          "name": "date",
          "type": "String",
          "description": "The date of the news item."
        },
        {
          "name": "image",
          "type": "String",
          "description": "The URL of the image of the news item."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the news item."
        },
        {
          "name": "description",
          "type": "String",
          "description": "The description of the news item."
        },
        {
          "name": "icon",
          "type": "IconData",
          "description": "The icon of the news item."
        },
        {
          "name": "titleStyle",
          "type": "TextStyle",
          "description": "The style of the title text."
        },
        {
          "name": "descriptionStyle",
          "type": "TextStyle",
          "description": "The style of the description text."
        },
        {
          "name": "dateStyle",
          "type": "TextStyle",
          "description": "The style of the date text."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the widget."
        },
        {
          "name": "imageHeight",
          "type": "double",
          "description": "The height of the image."
        },
        {
          "name": "imageWidth",
          "type": "double",
          "description": "The width of the image."
        },
        {
          "name": "imageFit",
          "type": "BoxFit",
          "description": "How the image should be inscribed into the box."
        },
        {
          "name": "bannerColor",
          "type": "Color",
          "description": "The color of the banner."
        },
        {
          "name": "bannerOpacity",
          "type": "double",
          "description": "The opacity of the banner."
        },
        {
          "name": "iconRadius",
          "type": "double",
          "description": "The radius of the icon."
        },
        {
          "name": "emptyPlaceholder",
          "type": "Widget?",
          "description": "The placeholder widget when the news item is empty."
        }
      ]
    },
    {
      "name": "AW_NewsVerticalListItem",
      "description": "This is a StatelessWidget that displays a vertical list item for news. It has several customizable parameters for flexibility.",
      "parameters": [
        {
          "name": "onTap",
          "type": "Function?",
          "description": "The function to be executed when the widget is tapped."
        },
        {
          "name": "imageUrl",
          "type": "String?",
          "description": "The URL of the image of the news item."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the news item."
        },
        {
          "name": "leadText",
          "type": "String",
          "description": "The lead text of the news item."
        },
        {
          "name": "readMoreText",
          "type": "String",
          "description": "The read more text of the news item."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The style of the title text."
        },
        {
          "name": "leadTextStyle",
          "type": "TextStyle",
          "description": "The style of the lead text."
        },
        {
          "name": "readMoreTextStyle",
          "type": "TextStyle",
          "description": "The style of the read more text."
        },
        {
          "name": "dividerColor",
          "type": "Color",
          "description": "The color of the divider."
        }
      ]
    },
    {
      "name": "AW_CustomModalSheet",
      "description": "A custom modal sheet widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a container that can hold a column of widgets, including an optional top icon, title, search widget, body widget, and bottom widget.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the modal sheet. Default value is 512."
        },
        {
          "name": "onClosePressed",
          "type": "Function",
          "description": "A function that is called when the close icon is pressed."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the modal sheet. Default value is an empty string."
        },
        {
          "name": "bottomWidget",
          "type": "Widget",
          "description": "A widget that is displayed at the bottom of the modal sheet."
        },
        {
          "name": "bodyWidget",
          "type": "Widget",
          "description": "A widget that forms the body of the modal sheet."
        },
        {
          "name": "topIcon",
          "type": "Widget",
          "description": "An optional icon that is displayed at the top of the modal sheet."
        },
        {
          "name": "shouldUseHeight",
          "type": "bool",
          "description": "A boolean value that determines whether the height should be used. Default value is true."
        },
        {
          "name": "searchWidget",
          "type": "Widget",
          "description": "An optional search widget that can be included in the modal sheet."
        }
      ]
    },
    {
      "name": "AW_NextPreviousWidget",
      "description": "A custom next/previous widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a container that holds a row of widgets, including an optional IconButton for previous and next actions, and a middle text.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "arrowColor",
          "type": "Color",
          "description": "The color of the arrow icons. Default value is Color.fromRGBO(158, 158, 158, 1)."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the widget. Default value is Color.fromRGBO(232, 235, 237, 1)."
        },
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the text. Default value is Color.fromRGBO(33, 33, 33, 1)."
        },
        {
          "name": "onPreviousPressed",
          "type": "Function",
          "description": "A function that is called when the previous icon button is pressed."
        },
        {
          "name": "onNextPressed",
          "type": "Function",
          "description": "A function that is called when the next icon button is pressed."
        },
        {
          "name": "middleText",
          "type": "String",
          "description": "The text that is displayed in the middle of the widget. Default value is an empty string."
        }
      ]
    },
    {
      "name": "AW_NoDataIndicator",
      "description": "A custom no data indicator widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a center widget that holds a column of widgets, including an SVG picture and a text widget.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget."
        },
        {
          "name": "imagePath",
          "type": "String",
          "description": "The path to the SVG image. Default value is an empty string."
        },
        {
          "name": "text",
          "type": "String",
          "description": "The text that is displayed below the SVG image. Default value is an empty string."
        },
        {
          "name": "textStyle",
          "type": "TextStyle",
          "description": "The style of the text. Default value is a TextStyle with fontSize 12, fontWeight w500, and color Color.fromRGBO(33, 33, 33, 1)."
        },
        {
          "name": "imageColor",
          "type": "Color",
          "description": "The color of the SVG image. Default value is Color.fromRGBO(127, 144, 159, 1)."
        },
        {
          "name": "textAlign",
          "type": "TextAlign",
          "description": "The alignment of the text. Default value is TextAlign.start."
        },
        {
          "name": "imageWidth",
          "type": "double",
          "description": "The width of the SVG image. Default value is 49."
        },
        {
          "name": "imageHeight",
          "type": "double",
          "description": "The height of the SVG image. Default value is 42."
        }
      ]
    },
    {
      "name": "AW_OdometerItem",
      "description": "A custom Odometer Item widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Card widget that holds a Container, which in turn holds a Row of widgets, including an optional image, title, date, and an icon button.",
      "parameters": [
        {
          "name": "icon",
          "type": "Icon",
          "description": "The icon for the IconButton. Default value is Icon(Icons.camera_alt_outlined)."
        },
        {
          "name": "onIconPressed",
          "type": "Function",
          "description": "A function that is called when the icon button is pressed."
        },
        {
          "name": "onImagePressed",
          "type": "Function",
          "description": "A function that is called when the image is pressed."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Odometer Item. Default value is 'Odometer'."
        },
        {
          "name": "date",
          "type": "String",
          "description": "The date of the Odometer Item. Default value is an empty string."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The style of the title text. Default value is a TextStyle with fontSize 16, fontWeight w400, and color Color.fromRGBO(35, 44, 53, 1)."
        },
        {
          "name": "dateTextStyle",
          "type": "TextStyle",
          "description": "The style of the date text. Default value is a TextStyle with fontSize 12, fontWeight w400, and color Color.fromRGBO(114, 125, 134, 1)."
        },
        {
          "name": "padding",
          "type": "EdgeInsets",
          "description": "The padding of the Container. Default value is EdgeInsets.symmetric(horizontal: 16.0, vertical: 20.0)."
        },
        {
          "name": "imageBytes",
          "type": "Uint8List",
          "description": "The bytes of the image. This is optional."
        },
        {
          "name": "imageUrl",
          "type": "String",
          "description": "The URL of the image. This is optional."
        }
      ]
    },
    {
      "name": "AW_OpenContainer",
      "description": "A custom Open Container widget in Flutter. It is a stateful widget that can be customized with various parameters. It consists of a Container that holds a GestureDetector, which in turn holds a Card. The Card contains another Container, which holds a Column of widgets, including a Row with title and SVG picture, and a Text widget that displays either openText or closedText based on the isOpened state.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Open Container. Default value is an empty string."
        },
        {
          "name": "closedText",
          "type": "String",
          "description": "The text that is displayed when the container is closed. Default value is an empty string."
        },
        {
          "name": "openText",
          "type": "String",
          "description": "The text that is displayed when the container is opened. Default value is an empty string."
        },
        {
          "name": "isOpened",
          "type": "bool",
          "description": "A boolean value that determines whether the container is opened or closed. Default value is false."
        }
      ]
    },
    {
      "name": "AW_PageViewIndicatorDots",
      "description": "A custom Page View Indicator Dots widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Row of Container widgets, each representing a dot. The color of the dot changes based on whether it is currently selected or not.",
      "parameters": [
        {
          "name": "currentIndex",
          "type": "int",
          "description": "The index of the currently selected dot. Default value is 0."
        },
        {
          "name": "numberOfDots",
          "type": "int",
          "description": "The total number of dots. Default value is 0."
        },
        {
          "name": "selectedColor",
          "type": "Color",
          "description": "The color of the selected dot. Default value is Color.fromRGBO(5, 23, 108, 1)."
        },
        {
          "name": "unselectedColor",
          "type": "Color",
          "description": "The color of the unselected dots. Default value is Color.fromRGBO(110, 110, 110, 1)."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget. This is optional."
        }
      ]
    },
    {
      "name": "AW_SupervisionInfoItem",
      "description": "A custom Supervision Info Item widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Column of widgets, including a SizedBox that holds a Stack of widgets, and a Divider.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Supervision Info Item."
        },
        {
          "name": "onPressed",
          "type": "VoidCallback",
          "description": "A callback that is called when the IconButton is pressed. This is optional."
        },
        {
          "name": "hasInfoButton",
          "type": "bool",
          "description": "A boolean value that determines whether the IconButton is displayed or not."
        }
      ]
    },
    {
      "name": "AW_ParentalControlItem",
      "description": "A custom Parental Control Item widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Column of widgets, including a Row with title and an IconButton, and a Text widget for description.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Parental Control Item."
        },
        {
          "name": "description",
          "type": "String",
          "description": "The description of the Parental Control Item."
        },
        {
          "name": "dialogContent",
          "type": "String",
          "description": "The content of the dialog that is displayed when the IconButton is pressed."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title. Default value is Color.fromRGBO(97, 97, 97, 1)."
        },
        {
          "name": "infoButtonColor",
          "type": "Color",
          "description": "The color of the info IconButton. Default value is Color.fromRGBO(158, 158, 158, 1)."
        },
        {
          "name": "descriptionColor",
          "type": "Color",
          "description": "The color of the description. Default value is Color.fromRGBO(52, 55, 65, 1)."
        },
        {
          "name": "dialogContentColor",
          "type": "Color",
          "description": "The color of the dialog content. Default value is Colors.black."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button in the dialog."
        },
        {
          "name": "dialogTitle",
          "type": "String",
          "description": "The title of the dialog."
        }
      ]
    },
    {
      "name": "AW_PermissionsPageViewItem",
      "description": "A custom Permissions Page View Item widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Column of widgets, including a Row with title and an IconButton, and a Text widget for description.",
      "parameters": [
        {
          "name": "onEnabledTap",
          "type": "Function",
          "description": "A function that is called when the enable button is tapped."
        },
        {
          "name": "onSkipTap",
          "type": "Function",
          "description": "A function that is called when the skip button is tapped."
        },
        {
          "name": "skipButtonText",
          "type": "String",
          "description": "The text of the skip button. Default value is an empty string."
        },
        {
          "name": "enableButtonText",
          "type": "String",
          "description": "The text of the enable button. Default value is an empty string."
        },
        {
          "name": "enableButtonColor",
          "type": "Color",
          "description": "The color of the enable button. Default value is Color.fromRGBO(19, 82, 222, 1)."
        },
        {
          "name": "contentText",
          "type": "String",
          "description": "The content text of the Permissions Page View Item. Default value is an empty string."
        },
        {
          "name": "contentTextStyle",
          "type": "TextStyle",
          "description": "The style of the content text. Default value is a TextStyle with fontSize 15, fontWeight w400, and color Color.fromRGBO(97, 97, 97, 1)."
        },
        {
          "name": "imageAssetPath",
          "type": "String",
          "description": "The asset path of the image. Default value is an empty string."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Permissions Page View Item. Default value is an empty string."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The style of the title. Default value is a TextStyle with fontSize 21, fontWeight w700, and color Color.fromRGBO(33, 33, 33, 1)."
        },
        {
          "name": "skipButtonTextStyle",
          "type": "TextStyle",
          "description": "The style of the skip button text. Default value is a TextStyle with fontSize 19, fontWeight w700, and color Color.fromRGBO(19, 82, 222, 1)."
        },
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "A key that uniquely identifies this widget. This is optional."
        },
        {
          "name": "ignoreSizes",
          "type": "bool",
          "description": "A boolean value that determines whether to ignore sizes or not. Default value is false."
        },
        {
          "name": "contentSpacing",
          "type": "double",
          "description": "The spacing of the content. Default value is 8.0."
        },
        {
          "name": "topSpacing",
          "type": "double",
          "description": "The spacing at the top. Default value is 24."
        },
        {
          "name": "instructionsContent",
          "type": "Widget",
          "description": "The instructions content of the Permissions Page View Item. This is optional."
        }
      ]
    },
    {
      "name": "AW_PolicyActionsItem",
      "description": "A custom Policy Actions Item widget in Flutter. It is a stateless widget that can be customized with various parameters. It consists of a Container that holds a Material widget, which in turn holds an InkWell. The InkWell contains a Padding widget, which holds a Row of widgets, including an SvgPicture for the icon, a Text widget for the title, and an Icon widget.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the Policy Actions Item."
        },
        {
          "name": "titleColor",
          "type": "Color",
          "description": "The color of the title. Default value is Color.fromRGBO(57, 70, 82, 1)."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "A callback that is called when the InkWell is tapped."
        },
        {
          "name": "icon",
          "type": "SvgPicture",
          "description": "The SvgPicture that represents the icon of the Policy Actions Item."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the Container. Default value is Colors.white."
        }
      ]
    },
    {
      "name": "AW_PolicyCompletion",
      "description": "This is a StatelessWidget that displays a policy completion widget. It shows a label, a completed value, and a maximum available value. The completed value is displayed as a fraction of the maximum available value in a progress bar. The widget also allows customization of various aspects such as colors, text sizes, and alignment.",
      "parameters": [
        {
          "name": "completedColor",
          "type": "Color",
          "description": "The color of the completed portion of the progress bar."
        },
        {
          "name": "completed",
          "type": "double",
          "description": "The completed value to be displayed."
        },
        {
          "name": "completedTextSize",
          "type": "double",
          "description": "The text size of the completed value."
        },
        {
          "name": "maxAvailableTextSize",
          "type": "double",
          "description": "The text size of the maximum available value."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the progress bar."
        },
        {
          "name": "labelColor",
          "type": "Color",
          "description": "The color of the label text."
        },
        {
          "name": "label",
          "type": "String",
          "description": "The label text to be displayed."
        },
        {
          "name": "unit",
          "type": "String",
          "description": "The unit of the values to be displayed."
        },
        {
          "name": "fontFamily",
          "type": "String?",
          "description": "The font family of the text."
        },
        {
          "name": "maxAvailable",
          "type": "double",
          "description": "The maximum available value to be displayed."
        },
        {
          "name": "maxAvailableColor",
          "type": "Color",
          "description": "The color of the maximum available value text."
        },
        {
          "name": "forcedTrailingText",
          "type": "String",
          "description": "A string that, if not empty, will replace the display of the completed and maximum available values."
        },
        {
          "name": "widthReduce",
          "type": "double",
          "description": "A value to reduce the width of the maximum available value, usually used for padding/margin from the app."
        },
        {
          "name": "rowAlignment",
          "type": "CrossAxisAlignment",
          "description": "The alignment of the row in the widget."
        }
      ]
    },
    {
      "name": "AW_PolicyData",
      "description": "This is a StatelessWidget that displays a policy data widget. It shows a score label, a total score, and a range label. The widget also allows customization of various aspects such as colors, text sizes, and alignment. It also includes a list of items that can be displayed in a horizontal scrollable view.",
      "parameters": [
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the widget."
        },
        {
          "name": "scoreColor",
          "type": "Color",
          "description": "The color of the score label and total score."
        },
        {
          "name": "rangeLabelColor",
          "type": "Color",
          "description": "The color of the range label."
        },
        {
          "name": "scoreLabel",
          "type": "String",
          "description": "The score label text to be displayed."
        },
        {
          "name": "totalScore",
          "type": "double",
          "description": "The total score to be displayed."
        },
        {
          "name": "rangeLabel",
          "type": "String",
          "description": "The range label text to be displayed."
        },
        {
          "name": "listHeight",
          "type": "double",
          "description": "The height of the list view."
        },
        {
          "name": "items",
          "type": "List<Widget>",
          "description": "The list of items to be displayed in the list view."
        },
        {
          "name": "marginBetweenItems",
          "type": "double?",
          "description": "The margin between items in the list view."
        },
        {
          "name": "shouldTakeSpecificNumOfItems",
          "type": "bool",
          "description": "A flag indicating whether a specific number of items should be taken from the list."
        },
        {
          "name": "numberOfItemsToTake",
          "type": "int",
          "description": "The number of items to take from the list if 'shouldTakeSpecificNumOfItems' is true."
        },
        {
          "name": "isReversed",
          "type": "bool",
          "description": "A flag indicating whether the list view is reversed."
        }
      ]
    },
    {
      "name": "AW_PolicyDetailItem",
      "description": "This is a StatelessWidget that displays a policy detail item. It shows an icon, a top text, and a bottom text. The widget also allows customization of various aspects such as colors and text sizes. It also includes an optional trailing widget.",
      "parameters": [
        {
          "name": "icon",
          "type": "SvgPicture",
          "description": "The icon to be displayed."
        },
        {
          "name": "topText",
          "type": "String",
          "description": "The top text to be displayed."
        },
        {
          "name": "bottomText",
          "type": "String",
          "description": "The bottom text to be displayed."
        },
        {
          "name": "topTextColor",
          "type": "Color",
          "description": "The color of the top text."
        },
        {
          "name": "bottomTextColor",
          "type": "Color",
          "description": "The color of the bottom text."
        },
        {
          "name": "trailingWidget",
          "type": "Widget?",
          "description": "An optional trailing widget to be displayed."
        }
      ]
    },
    {
      "name": "AW_PolicyPopupItem",
      "description": "This is a StatelessWidget that displays a policy popup item. It shows a label and a value, with an optional info icon that can be tapped. The widget also allows customization of various aspects such as colors, text sizes, and icon data.",
      "parameters": [
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the text."
        },
        {
          "name": "label",
          "type": "String",
          "description": "The label text to be displayed."
        },
        {
          "name": "value",
          "type": "String",
          "description": "The value text to be displayed."
        },
        {
          "name": "onInfoTap",
          "type": "VoidCallback?",
          "description": "The callback function to be executed when the info icon is tapped."
        },
        {
          "name": "iconData",
          "type": "IconData",
          "description": "The data for the info icon."
        },
        {
          "name": "height",
          "type": "double",
          "description": "The height of the items. Items with info icon are higher than those without one. This argument makes them equal in height."
        }
      ]
    },
    {
      "name": "AW_PolicyScoreItem",
      "description": "This is a StatelessWidget that displays a policy score item. It shows a label and a score, with a background color. The widget also allows customization of various aspects such as colors, text sizes, and padding.",
      "parameters": [
        {
          "name": "score",
          "type": "double",
          "description": "The score to be displayed."
        },
        {
          "name": "label",
          "type": "Widget",
          "description": "The label to be displayed."
        },
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the score container."
        },
        {
          "name": "scoreColor",
          "type": "Color",
          "description": "The color of the score text."
        },
        {
          "name": "labelColor",
          "type": "Color",
          "description": "The color of the label text."
        },
        {
          "name": "maxHeight",
          "type": "double",
          "description": "The maximum height of the score container."
        },
        {
          "name": "width",
          "type": "double",
          "description": "The width of the score container."
        },
        {
          "name": "padding",
          "type": "EdgeInsets",
          "description": "The padding around the widget."
        }
      ]
    },
    {
      "name": "AW_AmodoBanner",
      "description": "This is a StatelessWidget that displays a banner with a label. The widget allows customization of the background color, text color, and the label text.",
      "parameters": [
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the banner."
        },
        {
          "name": "textColor",
          "type": "Color",
          "description": "The color of the label text."
        },
        {
          "name": "label",
          "type": "String",
          "description": "The label text to be displayed on the banner."
        }
      ]
    },
    {
      "name": "AW_BasicPolicyCard",
      "description": "This is a StatelessWidget that displays a basic policy card. It shows a policy name, extra information, price, and under price text, with a background color. The widget also allows customization of various aspects such as colors, text styles, and padding.",
      "parameters": [
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the card."
        },
        {
          "name": "extraInfo",
          "type": "String",
          "description": "The extra information to be displayed."
        },
        {
          "name": "policyName",
          "type": "String",
          "description": "The policy name to be displayed."
        },
        {
          "name": "price",
          "type": "String",
          "description": "The price to be displayed."
        },
        {
          "name": "underPriceText",
          "type": "String",
          "description": "The text to be displayed under the price."
        },
        {
          "name": "extraInfoStyle",
          "type": "TextStyle",
          "description": "The text style of the extra information."
        },
        {
          "name": "policyNameStyle",
          "type": "TextStyle",
          "description": "The text style of the policy name."
        }
      ]
    },
    {
      "name": "AW_DynamicPolicyCard",
      "description": "This is a StatelessWidget that displays a dynamic policy card. It shows a user name, car information, price, extra information, policy name, and policy type, with a background color. The widget also allows customization of various aspects such as colors, text styles, and opacity.",
      "parameters": [
        {
          "name": "backgroundColor",
          "type": "Color",
          "description": "The background color of the card."
        },
        {
          "name": "userName",
          "type": "String",
          "description": "The user name to be displayed."
        },
        {
          "name": "carInfo",
          "type": "String",
          "description": "The car information to be displayed."
        },
        {
          "name": "price",
          "type": "String",
          "description": "The price to be displayed."
        },
        {
          "name": "extraInfo",
          "type": "String",
          "description": "The extra information to be displayed."
        },
        {
          "name": "policyName",
          "type": "String",
          "description": "The policy name to be displayed."
        },
        {
          "name": "policyType",
          "type": "String",
          "description": "The policy type to be displayed."
        },
        {
          "name": "userNameStyle",
          "type": "TextStyle",
          "description": "The text style of the user name."
        },
        {
          "name": "carInfoStyle",
          "type": "TextStyle",
          "description": "The text style of the car information."
        },
        {
          "name": "priceStyle",
          "type": "TextStyle",
          "description": "The text style of the price."
        },
        {
          "name": "extraInfoStyle",
          "type": "TextStyle",
          "description": "The text style of the extra information."
        },
        {
          "name": "policyNameStyle",
          "type": "TextStyle",
          "description": "The text style of the policy name."
        },
        {
          "name": "policyTypeStyle",
          "type": "TextStyle",
          "description": "The text style of the policy type."
        },
        {
          "name": "icon",
          "type": "Icon",
          "description": "The icon to be displayed."
        },
        {
          "name": "carInfoOpacity",
          "type": "double",
          "description": "The opacity of the car information."
        },
        {
          "name": "priceRange",
          "type": "String",
          "description": "The price range to be displayed."
        },
        {
          "name": "maxPrice",
          "type": "String",
          "description": "The maximum price to be displayed."
        },
        {
          "name": "dividerColor",
          "type": "Color",
          "description": "The color of the divider."
        }
      ]
    },
    {
      "name": "AW_Pentagon",
      "description": "This is a StatelessWidget that draws a pentagon based on five passed arguments. The widget does not take text into account when drawing on the canvas. The caller must supply the necessary space.",
      "parameters": [
        {
          "name": "valueA",
          "type": "double",
          "description": "The value for the first point of the pentagon."
        },
        {
          "name": "valueB",
          "type": "double",
          "description": "The value for the second point of the pentagon."
        },
        {
          "name": "valueC",
          "type": "double",
          "description": "The value for the third point of the pentagon."
        },
        {
          "name": "valueD",
          "type": "double",
          "description": "The value for the fourth point of the pentagon."
        },
        {
          "name": "valueE",
          "type": "double",
          "description": "The value for the fifth point of the pentagon."
        },
        {
          "name": "radius",
          "type": "double",
          "description": "The radius of the pentagon."
        },
        {
          "name": "maxScore",
          "type": "int",
          "description": "The maximum score for the pentagon."
        },
        {
          "name": "axisColor",
          "type": "Color",
          "description": "The color of the axis of the pentagon."
        },
        {
          "name": "connectorColor",
          "type": "Color",
          "description": "The color of the connector of the pentagon."
        },
        {
          "name": "offsetFactor",
          "type": "double",
          "description": "The offset factor of the pentagon."
        },
        {
          "name": "labelA",
          "type": "String",
          "description": "The label for the first point of the pentagon."
        },
        {
          "name": "labelB",
          "type": "String",
          "description": "The label for the second point of the pentagon."
        },
        {
          "name": "labelC",
          "type": "String",
          "description": "The label for the third point of the pentagon."
        },
        {
          "name": "labelD",
          "type": "String",
          "description": "The label for the fourth point of the pentagon."
        },
        {
          "name": "labelE",
          "type": "String",
          "description": "The label for the fifth point of the pentagon."
        },
        {
          "name": "labelsColor",
          "type": "Color",
          "description": "The color of the labels of the pentagon."
        }
      ]
    },
    {
      "name": "AW_PentagonOutline",
      "description": "This is a StatelessWidget that draws an outlined pentagon based on five passed arguments. The widget allows customization of various aspects such as colors, line width, filled color, labels, values, offset factor, circle color, and whether to draw lines.",
      "parameters": [
        {
          "name": "radius",
          "type": "double",
          "description": "The radius of the pentagon."
        },
        {
          "name": "lineColor",
          "type": "Color",
          "description": "The color of the lines of the pentagon."
        },
        {
          "name": "lineWidth",
          "type": "double",
          "description": "The width of the lines of the pentagon."
        },
        {
          "name": "filled",
          "type": "bool",
          "description": "Whether the pentagon is filled."
        },
        {
          "name": "outlineFillColor",
          "type": "Color",
          "description": "The fill color of the outlined pentagon."
        },
        {
          "name": "labelA",
          "type": "String",
          "description": "The label for the first point of the pentagon."
        },
        {
          "name": "labelB",
          "type": "String",
          "description": "The label for the second point of the pentagon."
        },
        {
          "name": "labelC",
          "type": "String",
          "description": "The label for the third point of the pentagon."
        },
        {
          "name": "labelD",
          "type": "String",
          "description": "The label for the fourth point of the pentagon."
        },
        {
          "name": "labelE",
          "type": "String",
          "description": "The label for the fifth point of the pentagon."
        },
        {
          "name": "valueA",
          "type": "double",
          "description": "The value for the first point of the pentagon."
        },
        {
          "name": "valueB",
          "type": "double",
          "description": "The value for the second point of the pentagon."
        },
        {
          "name": "valueC",
          "type": "double",
          "description": "The value for the third point of the pentagon."
        },
        {
          "name": "valueD",
          "type": "double",
          "description": "The value for the fourth point of the pentagon."
        },
        {
          "name": "valueE",
          "type": "double",
          "description": "The value for the fifth point of the pentagon."
        },
        {
          "name": "offsetFactor",
          "type": "double",
          "description": "The offset factor of the pentagon."
        },
        {
          "name": "valueLineColor",
          "type": "Color",
          "description": "The color of the value lines of the pentagon."
        },
        {
          "name": "valueLineWidth",
          "type": "double",
          "description": "The width of the value lines of the pentagon."
        },
        {
          "name": "valueFilledColor",
          "type": "Color",
          "description": "The filled color of the value of the pentagon."
        },
        {
          "name": "circleColor",
          "type": "Color",
          "description": "The color of the circle of the pentagon."
        },
        {
          "name": "shouldDrawLines",
          "type": "bool",
          "description": "Whether the lines of the pentagon should be drawn."
        },
        {
          "name": "labelColor",
          "type": "Color",
          "description": "The color of the labels of the pentagon."
        }
      ]
    },
    {
      "name": "AW_PrivilegesItem",
      "description": "This is a StatelessWidget that displays a privileges item. It shows a title, deep link, header image, lead text, and link. The widget also allows customization of various aspects such as title text style, image border, and onTap function.",
      "parameters": [
        {
          "name": "title",
          "type": "String",
          "description": "The title of the privileges item."
        },
        {
          "name": "deepLink",
          "type": "String",
          "description": "The deep link of the privileges item."
        },
        {
          "name": "headerImage",
          "type": "String",
          "description": "The header image of the privileges item."
        },
        {
          "name": "leadText",
          "type": "String",
          "description": "The lead text of the privileges item."
        },
        {
          "name": "link",
          "type": "String",
          "description": "The link of the privileges item."
        },
        {
          "name": "titleTextStyle",
          "type": "TextStyle",
          "description": "The text style of the title."
        },
        {
          "name": "imageBorder",
          "type": "BorderRadius",
          "description": "The border radius of the image."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The callback function to be executed when the privileges item is tapped."
        }
      ]
    },
    {
      "name": "AW_PrizeItem",
      "description": "This is a StatelessWidget that displays a prize item. It shows an image, prize icon, prize body, prize title, prizes remaining, and other related information. The widget also allows customization of various aspects such as colors, badges, participation status, remaining text, claimed status, claim button visibility, button disabled status, and button title.",
      "parameters": [
        {
          "name": "widgetKey",
          "type": "Key",
          "description": "The key of the widget."
        },
        {
          "name": "image",
          "type": "String",
          "description": "The image of the prize item."
        },
        {
          "name": "prizeIcon",
          "type": "String",
          "description": "The icon of the prize."
        },
        {
          "name": "prizeBody",
          "type": "String",
          "description": "The body text of the prize."
        },
        {
          "name": "prizeTitle",
          "type": "String",
          "description": "The title of the prize."
        },
        {
          "name": "prizesRemaining",
          "type": "int?",
          "description": "The number of prizes remaining."
        },
        {
          "name": "prizeIconColor",
          "type": "Color",
          "description": "The color of the prize icon."
        },
        {
          "name": "badgesWidget",
          "type": "Widget?",
          "description": "The badges widget."
        },
        {
          "name": "alreadyParticipate",
          "type": "bool",
          "description": "Whether the user has already participated."
        },
        {
          "name": "prizeRemainingText",
          "type": "String",
          "description": "The text showing the remaining prizes."
        },
        {
          "name": "prizeClaimed",
          "type": "String",
          "description": "The text showing whether the prize has been claimed."
        },
        {
          "name": "prizeNeedsToBeClaimed",
          "type": "String",
          "description": "The text showing whether the prize needs to be claimed."
        },
        {
          "name": "showClaimButton",
          "type": "bool",
          "description": "Whether to show the claim button."
        },
        {
          "name": "buttonDisabled",
          "type": "bool",
          "description": "Whether the button is disabled."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button."
        },
        {
          "name": "onButtonPressed",
          "type": "VoidCallback?",
          "description": "The callback function to be executed when the button is pressed."
        }
      ]
    },
    {
      "name": "AW_PrizeItemDemo",
      "description": "This is a StatelessWidget that displays a demo prize item. It shows an image, prize body, prize title, prizes remaining, and other related information. The widget also allows customization of various aspects such as badges, participation status, remaining text, button title, new prize text, activity status, participation ability, expired prize icon, claimed prize icon, non-actionable message, new prize status, expired prize status, and onTap function.",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "description": "The image of the prize item."
        },
        {
          "name": "prizeBody",
          "type": "String",
          "description": "The body text of the prize."
        },
        {
          "name": "prizeTitle",
          "type": "String",
          "description": "The title of the prize."
        },
        {
          "name": "prizesRemaining",
          "type": "int?",
          "description": "The number of prizes remaining."
        },
        {
          "name": "badgesWidget",
          "type": "Widget?",
          "description": "The badges widget."
        },
        {
          "name": "alreadyParticipate",
          "type": "bool",
          "description": "Whether the user has already participated."
        },
        {
          "name": "prizeRemainingText",
          "type": "String",
          "description": "The text showing the remaining prizes."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button."
        },
        {
          "name": "newPrizeText",
          "type": "String",
          "description": "The text for the new prize."
        },
        {
          "name": "isActive",
          "type": "bool",
          "description": "Whether the prize is active."
        },
        {
          "name": "canParticipate",
          "type": "bool",
          "description": "Whether the user can participate."
        },
        {
          "name": "prizedExpiredIcon",
          "type": "Icon",
          "description": "The icon for the expired prize."
        },
        {
          "name": "prizeClaimedIcon",
          "type": "Icon",
          "description": "The icon for the claimed prize."
        },
        {
          "name": "notActionableMessage",
          "type": "String",
          "description": "The message for the non-actionable prize."
        },
        {
          "name": "isNewPrize",
          "type": "bool",
          "description": "Whether the prize is new."
        },
        {
          "name": "prizeExpired",
          "type": "bool",
          "description": "Whether the prize has expired."
        },
        {
          "name": "onTap",
          "type": "VoidCallback",
          "description": "The callback function to be executed when the prize item is tapped."
        }
      ]
    },
    {
      "name": "AW_PrizeItemImage",
      "description": "This is a StatelessWidget that displays an image of a prize item. It shows an image, badges widget, button title, and title. The widget also allows customization of various aspects such as participation status, button disabled status, button title, button pressed function, claim button visibility, and widget key.",
      "parameters": [
        {
          "name": "image",
          "type": "String",
          "description": "The image of the prize item."
        },
        {
          "name": "alreadyParticipate",
          "type": "bool",
          "description": "Whether the user has already participated."
        },
        {
          "name": "badgesWidget",
          "type": "Widget?",
          "description": "The badges widget."
        },
        {
          "name": "buttonDisabled",
          "type": "bool",
          "description": "Whether the button is disabled."
        },
        {
          "name": "buttonTitle",
          "type": "String",
          "description": "The title of the button."
        },
        {
          "name": "onButtonPressed",
          "type": "VoidCallback?",
          "description": "The callback function to be executed when the button is pressed."
        },
        {
          "name": "showClaimButton",
          "type": "bool",
          "description": "Whether to show the claim button."
        },
        {
          "name": "widgetKey",
          "type": "Key?",
          "description": "The key of the widget."
        },
        {
          "name": "title",
          "type": "String",
          "description": "The title of the prize item."
        }
      ]
    }

  ]
}
